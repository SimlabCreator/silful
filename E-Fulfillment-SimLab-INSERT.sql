

INSERT IGNORE INTO simlab.region
(reg_id, reg_name, reg_point1_lat, reg_point1_long, reg_point2_lat, reg_point2_long, reg_average_km_per_hour) VALUES
(1, "Berlin", 52.450000, 13.300000, 52.600000, 13.550000, 24),
(2, "Munich", 48.246872, 11.347066, 48.067495, 11.725893, 32),
(3, "Berlin 3 DAs", 52.500000, 13.300000,52.550000,13.550000, 24),
(4, "Berlin avg.12 min", 52.470000, 13.320000, 52.560000, 13.470000, 24),
(5, "Berlin 20x20 min", 52.480000, 13.335000, 52.550000, 13.455000, 24),
(6, "Munich AYN", 48.060,11.356,48.251,11.726, 32),
(7, "Theoretical: 15x15min (24kmh, factor 1.0)", 0.0, 0.0, 0.054, 0.054,24),
(8, "Theoretical: 10x10km (30kmh)", 0.0, 0.0, 0.08994, 0.08994,30),
(9, "Theoretical: 15x15km (30kmh)", 0.0, 0.0, 0.1349, 0.1349,30),
(10, "Theoretical: 25x25km (30kmh)", 0.0, 0.0, 0.22485, 0.22485, 30);

INSERT IGNORE INTO simlab.depot
(dep_id, dep_lat,dep_long,dep_region) VALUES
(1, 52.50, 13.4,1),
(2, 52.525, 13.425,3),
(3, 52.515000, 13.395000, 4),
(4, 52.515000, 13.395000, 5),
(5, 48.1555, 11.5410,6),
(6, 0.027, 0.027, 7),
(7, 0.04497, 0.04497, 8),
(8, 0.06745,0.06745, 9),
(9, 0.05996,0.05996,8),
(10,0.089933, 0.089933,9),
(11,48.1173,11.467,6),
(12, 0.1499, 0.1499, 10);


INSERT IGNORE INTO simlab.objective
(obj_id, obj_name, obj_description) VALUES
(1, "social_impact_factor","network potential"),
(2, "local_visibility_factor","local visibility potential in scarce delivery areas");

INSERT IGNORE INTO simlab.demand_model_type
(dmt_id, dmt_name, dmt_parametric, dmt_independent) VALUES 
(1, "MNL_constant", 1, 0), (2, "binary_logit", 1,0), (3, "independent",1,1), (4, "preference_list", 0,0),
(5, "MNL_price", 1, 0);

INSERT IGNORE INTO simlab.incentive_type
(it_id, it_name) VALUES 
(1, "delivery fee"), (2, "Environment points");

INSERT IGNORE INTO simlab.kpi
(kpi_id, kpi_name, kpi_description) VALUES 
(1, "revenue", "overall revenue from e.g. basket value and delivery fee");

INSERT IGNORE INTO simlab.order_content_type
(oct_id, oct_name) VALUES
(1, "cooled goods"),
(2, "frozen goods");

INSERT IGNORE INTO simlab.probability_distribution_type
(pdt_id, pdt_name) VALUES
(1, "normal"),
(2, "log-normal"),
(3, "exponential"),
(4, "constant"),
(5, "uniform");

INSERT IGNORE INTO simlab.parameter_type 
(par_id, par_name, par_description) VALUES
(1, "alpha","Weight for exponential smoothing"),
(2, "min", "minimum value"),
(3, "max", "maximum value"),
(4, "mean", "mean value"),
(5, "lambda", "e.g. from exponential distribution"),
(6, "std", "standard deviation"),
(7, "mode percent", ""),
(8, "mode absolute", ""),
(9, "mu", ""),
(10, "sigma", ""),
(11, "B", "Number of value buckets"),
(12, "Constant_service_time", ""),
(13, "Minimum_request_number", ""),
(14, "samplePreferences","Boolean if request preferences are presampled"),
(15, "greediness_upperBound", "Orienteering algo GRILS"),
(16, "greediness_lowerBound","Orienteering algo GRILS"),
(17, "greediness_stepsize", "Orienteering algo GRILS"),
(18, "maximumRoundsWithoutImprovement", "Termination criterion of GRILS"),
(19, "maximumRoundsWithoutImprovementLocalSearch", "termination criterion for local search"),
(20, "alternative_randomization_approach_(boolean)", "parameter from GRILS"),
(21, "maximumNumberOfSolutions", "termination criterion"),
(22, "maximumNumberOfSolutionsLocalSearch","termination criterion for local search"),
(23, "squaredValue", "boolean if squaring score value in orienteering"),
(24, "actualBasketValue", "boolean if use actual basket value or mean"),
(25, "twSelectionOption_(0:greedy,1:random,2:popularity,3:0+2)","how to select assigned tw in orienteering"),
(26, "locationClusterProbability","probability of neighborhood for insertion"),
(27, "thresholdAcceptance","metaheuristik_accept worse solutions"),
(28, "directDistances", "boolean if euclidean distance"),
(29, "Beta_lower_bound", "minimum value for weighting of demand borders"),
(30, "Beta_upper_bound", "maximum value for weighting of demand borders"),
(31, "Beta_stepsize", "step value for weighting of demand borders"),
(32, "No_routing_candidates","number of potentially best routing candidates"),
(33, "time_dependent_travel_times", "use time dependent travel times in routing"),
(34, "includeDriveFromStartingPosition","routing: include travel from and to depot to travel time consumption?"),
(35, "averageCapacitiesAsOption", "linear programming can use average capacities"),
(36, "stepsize_adp_learning", "how much follow the gradient"),
(37, "maximal_acceptable_per_time_window", "expected to be acceptable per tw for normalization"),
(38, "initialiseCoefficientsProblemSpecific", "Use segment basket value etc for initisalisation in adp"),
(39, "annealing_temperature_(Negative:no_annealing)", "T after which stepsize is decreased"),
(40, "time_cap_interaction", "include interaction effect between time and capacity"),
(41, "cap_cap_interaction", "include interaction effect between capacity"),
(42, "consider_insertion_costs", "include insertion costs in adp"),
(43, "exploration_(0:on-policy,1:wheel,2:e-greedy)", "adp exploration"),
(44, "consider_coverage", "include coverage in adp"),
(45, "exactAssignments", "Use exact proportions in data generation"),
(46, "greediness", "GRASP"),
(47, "consider_REG","Campbell and Savelsbergh 2005"),
(48, "cost_multiplier", "costs for routing"),
(49, "no_routing_candidates","number of stochastic routings"),
(50, "no_insertion_candidates", "number of best insertions that are considered"),
(51, "consider_overall_remaining_capacity",""),
(52, "consider_area_potential", ""),
(53, "momentum_weight","adp momentum"),
(54, "no_reference_routings", "adp orienteering reference routes"),
(55, "consider_insertion_costs_time_window",""),
(56, "consider_insertion_costs_overall", ""),
(57, "consider_orienteering_routing_candidates", ""),
(58, "consider_orienteering_costs",""),
(59, "consider_orienteering_number", ""),
(60, "target_for_initialisation", ""),
(61, "consider_demand_capacity_ratio",""),
(62, "dynamic_feasibility_check", ""),
(63, "only_cost_based", ""),
(64, "theft-based",""),
(65, "consider_demand_probability", ""),
(66, "no_routing_candidates_final", ""),
(67, "no_insertion_candidates_final", ""),
(68, "area_specific_value_function", ""),
(69, "consider_orienteering_remaining_capacity", ""),
(70, "consider_orienteering_remaining_capacity_time", ""),
(71, "area_specific_deterministic_check",""),
(72, "consider_left_over_penalty", ""),
(73, "area_specific_utility_weighting",""),
(74, "soft_saturation_limit",""),
(75, "discounting_factor", ""),
(76, "discounting_factor_probability", ""),
(77, "exploration_(0:on-policy,1:conservative-factor,2:e-greedy)", ""),
(78, "theft-based-advanced", ""),
(79, "consider_profit", "check if temporary profit based on insertion costs and order value"),
(80, "beta", ""),
(81, "consider_constant", ""),
(82, "additional_hidden_nodes", ""),
(83, "duplicate_segments", ""),
(84, "consider_demand_neighbors",""),
(85, "oc_for_feasible", ""),
(86, "consider_t_and_weights", ""),
(87, "hTan_activation", ""),
(88, "weight_time_window_prob", ""),
(89, "weight_arrival_prob",""),
(90, "imp_for_insertion", ""),
(91, "distance_type", ""),
(92, "consider_remaining_budget",""),
(93, "distance_adp", ""),
(94, "consider_remaining_time", ""),
(95, "stop_once_feasible", ""),
(96, "distance_measure_per_tw", ""),
(97, "maximum_distance_measure_increase", ""),
(98, "switch_distance_off_point", ""),
(99, "consider_overall_accepted_insertion_costs", ""),
(100, "meso_weight_lf", ""),
(101, "no_repetitions_sample", ""),
(102, "theft-based-tw","");

INSERT IGNORE INTO simlab.probability_distribution
(pd_id, pd_name, pd_type) VALUES
(1, "Standard normal distribution", 1),
(2, "Constant 1.2", 4),
(3, "ND mean 50, sd 5",1),
(4, "ND (70,3)", 1),
(5, "ND(30,10)",1),
(6, "ND(50,10)",1),
(7, "ND(70,10)",1),
(8, "Constant 0.3",4),
(9, "ND(12,1) with min 0",1),
(10, "ND(12,1) with min 0",1),
(11, "ND(12,1) with min 0",1),
(12, "Constant 1", 4),
(13, "Constant 0.87",4),
(14, "LND(mu=3.8, lambda=0.31)",2),
(15, "LND(mu=4.0, lambda=0.4)",2),
(16, "LND(mu=4.3, lambda=0.2)",2),
(17, "LND(mu=3.824, lambda=0.22)",2),
(18, "LND(mu=4.065, lambda=0.175)",2),
(19, "LND(mu=4.310, lambda=0.13)",2),
(20, "ND(m=40, s=10, min=0)",1),
(21, "ND(m=60, s=10, min=0)",1),
(22, "ND(m=80, s=10, min=0)",1),
(23, "ND(m=9.12, s=10, min=0)", 1),
(24, "ND(m=40, s=5, min=0", 1),
(25, "ND(m=60, s=5, min=0", 1),
(26, "Constant 0.3", 4),
(27, "Constant 0.4", 4),
(28, "ND(0.3,0.01)", 1),
(29, "LND(mu=2.57, lambda=0.28)", 2),
(30, "LND(mu=2.9, lambda=0.1)", 2),
(31, "ND(0.8,0.01)", 1),
(32, "ND(0.5,0.01)", 1),
(33, "LND(mu=4.0635813, lambda=0.5334042)",2),
(34, "LND(mu=5.0, lambda=0.1)",2),
(35, "LND(mu=4.0635813, lambda=0.5334042, max=58)",2),
(36, "LND(mu=4.0635813, lambda=0.5334042, min=58)",2),
(37, "LND(mu=2.272895273, lambda=0.5)",2),
(38, "LND(mu=3.8, lambda=0.2",2),
(39, "LND(mu=4.3, lambda=0.2", 2),
(40, "LND(mu=3.5, lambda=0.4", 2),
(41, "ND(0.6,0.01)", 1),
(42, "ND(0.4,0.01)", 1),
(43, "LND(mu=3.912, lambda=0.15)", 2),
(44, "LND(mu=4.317, lambda=0.1)", 2),
(45, "ND(0.25, 0.01)", 1),
(46, "ND(0.225, 0.01)",1),
(47, "ND(0.375, 0.01)", 1),
(48, "ND(0.3375, 0.01)", 1),
(49, "ND(0.3, 0.01)", 1),
(50, "ND(0.27, 0.01)",1),
(51, "ND(0.45, 0.01)", 1),
(52, "ND(0.405, 0.01)", 1),
(53, "ND(0.35, 0.01)", 1),
(54, "ND(0.385, 0.01)",1),
(55, "ND(0.315, 0.01)",1),
(56, "ND(0.55, 0.01",1);


INSERT IGNORE INTO simlab.distribution_parameter_value
(dpv_probability_distribution, dpv_parameter_type, dpv_value) VALUES
(1,3,0),
(1,5,1),
(2,3,1.2),
(3,3,50),
(3,5,5),
(4,3,70),
(4,5,3),
(5,4,30),
(5,6,10),
(6,4,50),
(6,6,10),
(7,4,70),
(7,6,10),
(8,3,0.3),
(9,4,12),
(9,6,1),
(9,2,0),
(10,4,12),
(10,6,1),
(10,2,0),
(11,4,12),
(11,6,1),
(11,2,0),
(12,3,1),
(13,3,0.87),
(14, 9, 3.8),
(14, 10, 0.31),
(15, 9, 4.0),
(15, 10, 0.4),
(16,9,4.3),
(16,10,0.2),
(17, 9, 3.824),
(17, 10, 0.22),
(18, 9, 4.065),
(18, 10, 0.175),
(19,9,4.310),
(19,10,0.13),
(20, 4, 40),
(20,6, 10),
(20, 2, 0),
(21, 4, 60),
(21,6, 10),
(21, 2, 0),
(22, 4, 80),
(22,6, 10),
(22, 2, 0),
(23, 4, 9.12),
(23, 6, 10),
(23, 2, 0),
(24, 4, 40),
(24, 6, 5),
(24, 2, 0),
(25, 4, 60),
(25, 6, 5),
(25, 2, 0),
(26, 3, 0.3),
(27, 3, 0.4),
(28, 4,0.3),
(28,6,0.01),
#(29, 9, 2.57),
#(29, 10, 0.28),
#(30, 9, 2.90),
#(30, 10, 0.10),
(29, 9, 2.55),
(29, 10, 0.24),
(30, 9, 3.2),
(30, 10, 0.08),
(31, 4,0.8),
(31,6,0.01),
(32, 4,0.5),
(32,6,0.01),
(33,9,4.0635813),
(33,10,0.5334042),
(34,9,5.0),
(34,10,0.1),
(35,9,4.0635813),
(35, 10, 0.5334042),
(35, 3, 58),
(36,9,4.0635813),
(36, 10, 0.5334042),
(36, 2, 58),
(37, 9,2.272895273),
(37,10,0.5),
(38, 9,3.8),
(38,10,0.2),
(39, 9,4.3),
(39,10,0.2),
(40, 9,3.5),
(40,10,0.4),
(41, 4,0.6),
(41,6,0.01),
(42, 4,0.4),
(42,6,0.01),
(43, 9,3.912),
(43,10,0.15),
(44, 9,4.317),
(44,10,0.1),
(45, 4,0.25),
(45,6,0.01),
(46, 4,0.225),
(46,6,0.01),
(47, 4,0.375),
(47,6,0.01),
(48, 4,0.3375),
(48,6,0.01),
(49, 4,0.3),
(49,6,0.01),
(50, 4,0.27),
(50,6,0.01),
(51, 4,0.45),
(51,6,0.01),
(52, 4,0.405),
(52,6,0.01),
(53, 4,0.35),
(53,6,0.01),
(54, 4,0.385),
(54,6,0.01),
(55, 4,0.315),
(55,6,0.01),
(56, 4,0.55),
(56,6,0.01);


INSERT IGNORE INTO simlab.variable_type
(var_id, var_name) VALUES
(1, "ord_basket_value"),
(2, "delivery_fee");


INSERT IGNORE INTO simlab.delivery_area_set
(das_id, das_name, das_description, das_region, das_predefined) VALUES
(1, "munich same size", "same area size, 9 areas, arranged 1.) left to right, 2.) top to bottom, center in middle", 2, 1),
(2, "berlin same size", "same area size, 9 areas, arranged 1.) left to right, 2.) top to bottom, center in middle", 1, 1),
(3, "berlin 3  in center", "", 3, 1),
(4, "berlin hierarchie with one subarea", "hierarchie, one area on first level, 9 on lower",1,1),
(5, "berlin avg. 12 min - same size", "9 areas",4,1),
(6, "berlin hierarchie with one subarea", "hierarchie, one area on first level, 9 on lower",4,1);


INSERT IGNORE INTO simlab.delivery_area_set
(das_id, das_name, das_description, das_region, das_predefined, das_reasonable_area_no) VALUES
(7, "berlin with 16 undefined areas", "areas defined on runtime", 4,0,16),
(8, "berlin hierarchie with one subarea (divided in 16)", "hierarchie, one area on first level, 16 on lower",4,1, NULL),
(9, "berlin with 9 undefined areas", "areas defined on runtim", 4, 0, 9),
(10, "berlin hierarchie with one subarean(divided in 9)", "hierarchie, one area on first level, 9 on lower", 4,1,NULL),
(11, "berlin with 25 undefined areas", "areas defined on runtime", 4, 0, 25),
(12, "berlin hierarchie with one subarea (divided in 25)", "hierarchie, one area on first level, 25 on lower", 4,1,NULL),
(13, "berlin 20x20 with 25 undefined areas", "areas defined on runtime",5,0, 25),
(14, "berlin 20x20 with one area and 25 subareas", "hierarchie, one area on first level, 25 on lower",5, 1, NULL),
(15, "berlin 20x20 with 100 undefined areas", "areas defined on runtime",5,0, 100),
(16, "berlin 20x20 with one area and 100 subareas", "hierarchie, one area on first level, 100 on lower",5, 1, NULL),
(17, "berlin 20x20 with 16 undefined areas", "areas defined on runtime",5,0, 16),
(18, "berlin 20x20 with one area and 16 subareas", "hierarchie, one area on first level, 16 on lower",5, 1, NULL),
(19, "berlin 20x20 with 9 undefined areas", "areas defined on runtime",5,0, 9),
(20, "berlin 20x20 with one area and 9 subareas", "hierarchie, one area on first level, 16 on lower",5, 1, NULL),
(21, "munich AYN with one area", "hierarchy, one area on first level, 100 on lower", 6,1, NULL),
(22, "munich AYN with 100 subareas", "hierarchy, one area on first level, 100 on lower", 6,0, 100),
(23, "munich AYN with one area-smaller", "hierarchy, one area on first level, 16 on lower", 6,1, NULL),
(24, "munich AYN with 16 subareas", "hierarchy, one area on first level, 16 on lower", 6,0, 16),
(25, "munich AYN with one area-smaller (36)", "hierarchy, one area on first level, 16 on lower", 6,1, NULL),
(26, "munich AYN with 16 subareas", "hierarchy, one area on first level, 36 on lower", 6,0, 36),
(27, "munich AYN with one area-smaller (64)", "hierarchy, one area on first level, 16 on lower", 6,1, NULL),
(28, "munich AYN with 16 subareas", "hierarchy, one area on first level, 64 on lower", 6,0, 64),
(29, "munich AYN with one area (large-36)", "hierarchy, one area on first level, 36 on lower", 6,1, NULL),
(30, "munich AYN with 36 subareas", "hierarchy, one area on first level, 36 on lower", 6,0, 36),
(31, "munich AYN with one area (medium-25)", "hierarchy, one area on first level, 25 on lower", 6,1, NULL),
(32, "munich AYN with 25 subareas", "hierarchy, one area on first level, 25 on lower", 6,0, 25),
(33, "Theoretical: 15x15min (24kmh, factor 1.0)", "hierarchy, one area on first level, 25 on lower", 7,1, NULL),
(34, "Theoretical: 15x15min (24kmh, factor 1.0)-lower", "hierarchy, one area on first level, 25 on lower", 7,0, 25),
(35, "Theoretical: 10x10km (30kmh)", "hierarchy, one area on first level, 36 on lower", 8,1, NULL),
(36, "Theoretical: 10x10km (30kmh)-sub", "36 on lower", 8,0, 36),
(37, "Theoretical: 15x15km (30kmh), 36", "hierarchy, one area on first level, 36 on lower", 9,1, NULL),
(38, "Theoretical: 15x15km (30kmh)-sub", "36 on lower", 9,0, 36),
(39, "Theoretical: 15x15km (30kmh), 64", "hierarchy, one area on first level, 64 on lower", 9,1, NULL),
(40, "Theoretical: 15x15km (30kmh), 64-sub", "64 on lower", 9,0, 64),
(41, "Theoretical: 25x25km (30kmh), 100", "hierarchy, one area on first level, 100 on lower", 10, 1, NULL),
(42, "Theoretical: 25x25km (30kmh), 100-sub", "100 on lower", 10, 0, 100);

INSERT IGNORE INTO simlab.delivery_area
(da_id, da_set, da_point1_lat,da_point1_long,da_point2_lat,da_point2_long,da_center_lat,da_center_long) VALUES
(1, 1, 48.246872,11.347066, 48.1870797, 11.47334167, 48.21697583, 11.41020383),
(2, 1, 48.2468720,11.47334177,48.1870797,11.59961738, 48.21697583, 11.53647958),
(3, 1, 48.2468720,11.59961748,48.1870797,11.7258930, 48.21697583, 11.66275524),
(4, 1, 48.1870796,11.3470660, 48.12728728,11.47334167, 48.15718343, 11.41020383),
(5, 1, 48.1870796,11.47334177,48.12728728,11.59961738, 48.15718343, 11.53647958),
(6, 1, 48.1870796,11.59961748,48.12728728,11.7258930, 48.15718343, 11.66275524),
(7, 1, 48.12728718,11.3470660,48.0674950,11.47334167, 48.09739109, 11.41020383),
(8, 1, 48.12728718,11.47334177,48.0674950,11.59961738, 48.09739109, 11.53647958),
(9, 1, 48.12728718,11.59961748,48.0674950,11.7258930, 48.09739109, 11.66275524),
(10, 2,	52.550000	,	13.300000	,	52.600000	,	13.383000	,	52.575000	,	13.341500	),
(11, 2,	52.550000	,	13.383000	,	52.600000	,	13.467000	,	52.575000	,	13.425000	),
(12, 2,	52.550000	,	13.467000	,	52.600000	,	13.550000	,	52.575000	,	13.508500	),
(13, 2,	52.500000	,	13.300000	,	52.550000	,	13.383000	,	52.525000	,	13.341500	),
(14, 2,	52.500000	,	13.383000	,	52.550000	,	13.467000	,	52.525000	,	13.425000	),
(15, 2,	52.500000	,	13.467000	,	52.550000	,	13.550000	,	52.525000	,	13.508500	),
(16, 2,	52.450000	,	13.300000	,	52.500000	,	13.383000	,	52.475000	,	13.341500	),
(17, 2,	52.450000	,	13.383000	,	52.500000	,	13.467000	,	52.475000	,	13.425000	),
(18, 2,	52.450000	,	13.467000	,	52.500000	,	13.550000	,	52.475000	,	13.508500	),
(19, 3,	52.500000	,	13.300000	,	52.550000	,	13.350000	,	52.525000	,	13.325000	),
(20, 3,	52.500000	,	13.350000	,	52.550000	,	13.500000	,	52.525000	,	13.425000	),
(21, 3,	52.500000	,	13.500000	,	52.550000	,	13.550000	,	52.525000	,	13.525000	),
(23,5, 52.530000,	13.320000,	52.560000,	13.370000,	52.545000,	13.345000),
(24,5,	52.530000,	13.370000,	52.560000,	13.420000,	52.545000,	13.395000),
(25,5,	52.530000,	13.420000,	52.560000,	13.470000,	52.545000,	13.445000),
(26,5,	52.500000,	13.320000,	52.530000,	13.370000,	52.515000,	13.345000),
(27,5,	52.500000,	13.370000,	52.530000,	13.420000,	52.515000,	13.395000),
(28,5,	52.500000,	13.420000,	52.530000,	13.470000,	52.515000,	13.445000),
(29,5,	52.470000,	13.320000,	52.500000,	13.370000,	52.485000,	13.345000),
(30,5,	52.470000,	13.370000,	52.500000,	13.420000,	52.485000,	13.395000),
(31,5,	52.470000,	13.420000,	52.500000,	13.470000,	52.485000,	13.445000);

INSERT IGNORE INTO simlab.delivery_area
(da_id, da_set, da_point1_lat,da_point1_long,da_point2_lat,da_point2_long,da_center_lat,da_center_long, da_subset) VALUES
(22, 4, 52.450000, 13.300000, 52.600000, 13.550000, 52.525000,13.425000,2),
(32, 6, 52.470000, 13.320000, 52.560000, 13.470000, 52.515000, 13.395000, 5),
(33,8, 52.470000, 13.320000, 52.560000, 13.470000, 52.515000, 13.395000, 7),
(34, 10, 52.470000, 13.320000, 52.560000, 13.470000, 52.515000, 13.395000, 9),
(35, 12, 52.470000, 13.320000, 52.560000, 13.470000, 52.515000, 13.395000, 11),
(36, 14, 52.480000, 13.335000, 52.550000, 13.455000, 52.515000, 13.395000, 13),
(37, 16, 52.480000, 13.335000, 52.550000, 13.455000, 52.515000, 13.395000, 15),
(38, 18, 52.480000, 13.335000, 52.550000, 13.455000, 52.515000, 13.395000, 17),
(39, 20, 52.480000, 13.335000, 52.550000, 13.455000, 52.515000, 13.395000, 19),
(40, 21, 48.060,11.356,48.251,11.726, 48.1555, 11.5410, 22),
(41, 23, 48.1173, 11.467, 48.1937, 11.615, 48.1555, 11.5410,24);

INSERT IGNORE INTO simlab.delivery_area
(da_id, da_set, da_point1_lat,da_point1_long,da_point2_lat,da_point2_long,da_center_lat,da_center_long, da_subset) VALUES
(10000, 25, 48.0982, 11.430, 48.2128, 11.652, 48.1555, 11.5410,26),
(10001, 27,48.0791, 11.393, 48.2319, 11.689, 48.1555, 11.5410,28),
(10002,29, 48.0791, 11.393, 48.2319, 11.689, 48.1555, 11.5410,30);

INSERT IGNORE INTO simlab.delivery_area
(da_id, da_set, da_point1_lat,da_point1_long,da_point2_lat,da_point2_long,da_center_lat,da_center_long, da_subset) VALUES
(10003, 31,48.0982, 11.430, 48.2128, 11.652, 48.1555, 11.5410,32);

INSERT IGNORE INTO simlab.delivery_area
(da_id, da_set, da_point1_lat,da_point1_long,da_point2_lat,da_point2_long,da_center_lat,da_center_long, da_subset) VALUES
(10004, 33,0.0, 0.0, 0.054, 0.054, 0.027, 0.027,34);

INSERT IGNORE INTO simlab.delivery_area
(da_id, da_set, da_point1_lat,da_point1_long,da_point2_lat,da_point2_long,da_center_lat,da_center_long, da_subset) VALUES
(10005, 35,0.0, 0.0, 0.08994, 0.08994, 0.04497, 0.04497, 36),
(10006, 37, 0.0, 0.0, 0.1349, 0.1349, 0.06745,0.06745, 38),
(10007, 39, 0.0, 0.0, 0.1349, 0.1349, 0.06745,0.06745, 40),
(10008, 41, 0.0, 0.0, 0.22485, 0.22485, 0.112425, 0.112425, 42);

INSERT IGNORE INTO simlab.residence_area_set
(ras_id, ras_name, ras_description, ras_region) VALUES
(1, "munich same size", "same area size, 9 areas, arranged 1.) left to right, 2.) top to bottom, center in middle", 2),
(2, "berlin same size (middle wider)", "same area size, 9 areas, arranged 1.) left to right, 2.) top to bottom, center in middle", 1),
(3, "berlin 3 delivery areas in center", "", 3),
(4, "berlin different clusters", "different sizes of areas",1),
(5, "berlin uniform", "only one area", 1),
(6, "berlin avg. 12 min", "only one area",4),
(7, "berlin svg. 12 min", "two areas",4),
(8, "berlin 20x20 min", "two areas",5),
(9, "berlin 20X20 min", "3 areas", 5),
(10, "berlin 20x20 min, two clus", "3 areas", 5),
(11, "munich AYN", "100 areas", 6),
(12, "berlin 20x20 min - 3 areas", "3 areas", 5),
(13, "Theoretical: 15x15min (24kmh, factor 1.0)-25 areas", "25 areas",7),
(14, "Theo 10x10km-complete, 4 large, and 4 small clusters","different areas for different cluster possibilities",8),
(15, "Theo 15x15km-complete, 4 large, and 4 small clusters","different areas for different cluster possibilities",9),
(16, "Theo 25x25km-complete, 4 large and 4 small clusters", "different areas for different cluster possibilities", 10);


INSERT IGNORE INTO simlab.residence_area
(res_id, res_residence_area_set, res_point1_lat,res_point1_long,res_point2_lat,res_point2_long) VALUES
(1, 1, 48.246872,11.347066, 48.1870797, 11.47334167),
(2, 1, 48.2468720,11.47334177,48.1870797,11.59961738),
(3, 1, 48.2468720,11.59961748,48.1870797,11.7258930),
(4, 1, 48.1870796,11.3470660, 48.12728728,11.47334167),
(5, 1, 48.1870796,11.47334177,48.12728728,11.59961738),
(6, 1, 48.1870796,11.59961748,48.12728728,11.7258930),
(7, 1, 48.12728718,11.3470660,48.0674950,11.47334167),
(8, 1, 48.12728718,11.47334177,48.0674950,11.59961738),
(9, 1, 48.12728718,11.59961748,48.0674950,11.7258930),
(10, 2,	52.550000	,	13.300000	,	52.600000	,	13.383000	),
(11, 2,	52.550000	,	13.383000	,	52.600000	,	13.467000	),
(12, 2,	52.550000	,	13.467000	,	52.600000	,	13.550000	),
(13, 2,	52.500000	,	13.300000	,	52.550000	,	13.383000	),
(14, 2,	52.500000	,	13.383000	,	52.550000	,	13.467000	),
(15, 2,	52.500000	,	13.467000	,	52.550000	,	13.550000	),
(16, 2,	52.450000	,	13.300000	,	52.500000	,	13.383000	),
(17, 2,	52.450000	,	13.383000	,	52.500000	,	13.467000	),
(18, 2,	52.450000	,	13.467000	,	52.500000	,	13.550000		),
(19, 3,	52.500000	,	13.300000	,	52.550000	,	13.350000),
(20, 3,	52.500000	,	13.350000	,	52.550000	,	13.500000),
(21, 3,	52.500000	,	13.500000	,	52.550000	,	13.550000),
(22, 4, 52.45, 13.3, 52.55, 13.5),
(23, 4, 52.46, 13.32, 52.48, 13.36),
(24, 4, 52.45, 13.42, 52.46, 13.44),
(25, 4, 52.46, 13.46, 52.47,13.48),
(26, 4, 52.48, 13.36, 52.51, 13.44),
(27, 4, 52.5, 13.46, 52.51, 13.48),
(28, 4, 52.51, 13.3, 52.55, 13.38),
(29, 4, 52.53, 13.44, 52.54, 13.48),
(30, 5, 52.450000, 13.300000, 52.600000, 13.550000);

INSERT IGNORE INTO simlab.residence_area
(res_id, res_residence_area_set, res_point1_lat,res_point1_long,res_point2_lat,res_point2_long,res_reasonable_subarea_no) VALUES
(31, 6, 52.470000, 13.320000, 52.560000, 13.470000, 16),
(32, 7, 52.470000, 13.320000, 52.560000, 13.470000, 16),
(33, 7, 52.470000, 13.320000, 52.515000, 13.395000, 4),
(34, 8, 52.480000, 13.335000, 52.550000, 13.455000, 16),
(35, 8, 52.480000, 13.335000, 52.515000, 13.395000, 4),
(36, 9, 52.480000, 13.335000, 52.550000, 13.455000, 25),
(37, 9, 52.494000, 13.335000, 52.536000, 13.377000, 5),
(38, 9, 52.494000, 13.413000, 52.536000, 13.455000, 5),
(39, 10, 52.480000, 13.335000, 52.550000, 13.375000, 9),
(40,10, 52.480000, 13.375000, 52.550000, 13.455000, 16),
(41, 10, 52.5325, 13.415000, 52.550000, 13.445000, 4);

INSERT IGNORE INTO simlab.residence_area
(res_id, res_residence_area_set, res_point1_lat,res_point2_lat, res_point1_long, res_point2_long,res_reasonable_subarea_no) VALUES
(42,11,48.06,48.07910001,11.356,11.39300001,1),
(43,11,48.06,48.07910001,11.39300001,11.43000002,1),
(44,11,48.06,48.07910001,11.43000002,11.46700003,1),
(45,11,48.06,48.07910001,11.46700003,11.50400004,1),
(46,11,48.06,48.07910001,11.50400004,11.54100005,1),
(47,11,48.06,48.07910001,11.54100005,11.57800006,1),
(48,11,48.06,48.07910001,11.57800006,11.61500007,1),
(49,11,48.06,48.07910001,11.61500007,11.65200008,1),
(50,11,48.06,48.07910001,11.65200008,11.68900009,1),
(51,11,48.06,48.07910001,11.68900009,11.7260001,1),
(52,11,48.07910001,48.09820002,11.356,11.39300001,1),
(53,11,48.07910001,48.09820002,11.39300001,11.43000002,1),
(54,11,48.07910001,48.09820002,11.43000002,11.46700003,1),
(55,11,48.07910001,48.09820002,11.46700003,11.50400004,1),
(56,11,48.07910001,48.09820002,11.50400004,11.54100005,1),
(57,11,48.07910001,48.09820002,11.54100005,11.57800006,1),
(58,11,48.07910001,48.09820002,11.57800006,11.61500007,1),
(59,11,48.07910001,48.09820002,11.61500007,11.65200008,1),
(60,11,48.07910001,48.09820002,11.65200008,11.68900009,1),
(61,11,48.07910001,48.09820002,11.68900009,11.7260001,1),
(62,11,48.09820002,48.11730003,11.356,11.39300001,1),
(63,11,48.09820002,48.11730003,11.39300001,11.43000002,1),
(64,11,48.09820002,48.11730003,11.43000002,11.46700003,1),
(65,11,48.09820002,48.11730003,11.46700003,11.50400004,1),
(66,11,48.09820002,48.11730003,11.50400004,11.54100005,1),
(67,11,48.09820002,48.11730003,11.54100005,11.57800006,1),
(68,11,48.09820002,48.11730003,11.57800006,11.61500007,1),
(69,11,48.09820002,48.11730003,11.61500007,11.65200008,1),
(70,11,48.09820002,48.11730003,11.65200008,11.68900009,1),
(71,11,48.09820002,48.11730003,11.68900009,11.7260001,1),
(72,11,48.11730003,48.13640004,11.356,11.39300001,1),
(73,11,48.11730003,48.13640004,11.39300001,11.43000002,1),
(74,11,48.11730003,48.13640004,11.43000002,11.46700003,1),
(75,11,48.11730003,48.13640004,11.46700003,11.50400004,1),
(76,11,48.11730003,48.13640004,11.50400004,11.54100005,1),
(77,11,48.11730003,48.13640004,11.54100005,11.57800006,1),
(78,11,48.11730003,48.13640004,11.57800006,11.61500007,1),
(79,11,48.11730003,48.13640004,11.61500007,11.65200008,1),
(80,11,48.11730003,48.13640004,11.65200008,11.68900009,1),
(81,11,48.11730003,48.13640004,11.68900009,11.7260001,1),
(82,11,48.13640004,48.15550005,11.356,11.39300001,1),
(83,11,48.13640004,48.15550005,11.39300001,11.43000002,1),
(84,11,48.13640004,48.15550005,11.43000002,11.46700003,1),
(85,11,48.13640004,48.15550005,11.46700003,11.50400004,1),
(86,11,48.13640004,48.15550005,11.50400004,11.54100005,1),
(87,11,48.13640004,48.15550005,11.54100005,11.57800006,1),
(88,11,48.13640004,48.15550005,11.57800006,11.61500007,1),
(89,11,48.13640004,48.15550005,11.61500007,11.65200008,1),
(90,11,48.13640004,48.15550005,11.65200008,11.68900009,1),
(91,11,48.13640004,48.15550005,11.68900009,11.7260001,1),
(92,11,48.15550005,48.17460006,11.356,11.39300001,1),
(93,11,48.15550005,48.17460006,11.39300001,11.43000002,1),
(94,11,48.15550005,48.17460006,11.43000002,11.46700003,1),
(95,11,48.15550005,48.17460006,11.46700003,11.50400004,1),
(96,11,48.15550005,48.17460006,11.50400004,11.54100005,1),
(97,11,48.15550005,48.17460006,11.54100005,11.57800006,1),
(98,11,48.15550005,48.17460006,11.57800006,11.61500007,1),
(99,11,48.15550005,48.17460006,11.61500007,11.65200008,1),
(100,11,48.15550005,48.17460006,11.65200008,11.68900009,1),
(101,11,48.15550005,48.17460006,11.68900009,11.7260001,1),
(102,11,48.17460006,48.19370007,11.356,11.39300001,1),
(103,11,48.17460006,48.19370007,11.39300001,11.43000002,1),
(104,11,48.17460006,48.19370007,11.43000002,11.46700003,1),
(105,11,48.17460006,48.19370007,11.46700003,11.50400004,1),
(106,11,48.17460006,48.19370007,11.50400004,11.54100005,1),
(107,11,48.17460006,48.19370007,11.54100005,11.57800006,1),
(108,11,48.17460006,48.19370007,11.57800006,11.61500007,1),
(109,11,48.17460006,48.19370007,11.61500007,11.65200008,1),
(110,11,48.17460006,48.19370007,11.65200008,11.68900009,1),
(111,11,48.17460006,48.19370007,11.68900009,11.7260001,1),
(112,11,48.19370007,48.21280008,11.356,11.39300001,1),
(113,11,48.19370007,48.21280008,11.39300001,11.43000002,1),
(114,11,48.19370007,48.21280008,11.43000002,11.46700003,1),
(115,11,48.19370007,48.21280008,11.46700003,11.50400004,1),
(116,11,48.19370007,48.21280008,11.50400004,11.54100005,1),
(117,11,48.19370007,48.21280008,11.54100005,11.57800006,1),
(118,11,48.19370007,48.21280008,11.57800006,11.61500007,1),
(119,11,48.19370007,48.21280008,11.61500007,11.65200008,1),
(120,11,48.19370007,48.21280008,11.65200008,11.68900009,1),
(121,11,48.19370007,48.21280008,11.68900009,11.7260001,1),
(122,11,48.21280008,48.23190009,11.356,11.39300001,1),
(123,11,48.21280008,48.23190009,11.39300001,11.43000002,1),
(124,11,48.21280008,48.23190009,11.43000002,11.46700003,1),
(125,11,48.21280008,48.23190009,11.46700003,11.50400004,1),
(126,11,48.21280008,48.23190009,11.50400004,11.54100005,1),
(127,11,48.21280008,48.23190009,11.54100005,11.57800006,1),
(128,11,48.21280008,48.23190009,11.57800006,11.61500007,1),
(129,11,48.21280008,48.23190009,11.61500007,11.65200008,1),
(130,11,48.21280008,48.23190009,11.65200008,11.68900009,1),
(131,11,48.21280008,48.23190009,11.68900009,11.7260001,1),
(132,11,48.23190009,48.2510001,11.356,11.39300001,1),
(133,11,48.23190009,48.2510001,11.39300001,11.43000002,1),
(134,11,48.23190009,48.2510001,11.43000002,11.46700003,1),
(135,11,48.23190009,48.2510001,11.46700003,11.50400004,1),
(136,11,48.23190009,48.2510001,11.50400004,11.54100005,1),
(137,11,48.23190009,48.2510001,11.54100005,11.57800006,1),
(138,11,48.23190009,48.2510001,11.57800006,11.61500007,1),
(139,11,48.23190009,48.2510001,11.61500007,11.65200008,1),
(140,11,48.23190009,48.2510001,11.65200008,11.68900009,1),
(141,11,48.23190009,48.2510001,11.68900009,11.7260001,1),
(142, 12, 52.480000,  52.550000,13.335000, 13.455000, 16),
(143, 12, 52.480000,  52.515000, 13.335000,13.395000, 4),
(144, 12, 52.480000,  52.497500, 13.425000, 13.455000,1),
(145,13,0,0.0324,0,0.0216,6),
(146,13,0, 0.0108,0.0432,0.0540,1),
(147,13,0.0324,0.0540,0.0324,0.0540,4),
(148,14,0.0,0.08994,0.0,0.08994,36),
(149, 14,0.0, 0.02998,0.0, 0.02998,4),
(150, 14, 0.05996,0.08994,0.05996,0.08994,4),
(151, 14, 0.01499, 0.02998, 0.01499, 0.02998, 1),
(152, 14, 0.01499, 0.02998, 0.05996, 0.07495, 1),
(153, 14, 0.05996, 0.07495, 0.01499, 0.02998, 1),
(154, 14, 0.05996, 0.07495, 0.05996, 0.07495, 1),
(155,15,0.0,0.1349,0.0,0.1349,36),
(156,15,0.0,0.044967,0.0,0.044967,4),
(157,15,0.08993,0.1349,0.08993,0.1349,4),
(158,15,0.022483,0.044967,0.022483,0.044967,1),
(159,15,0.022483,0.044967,0.08993,0.11242,1),
(160,15,0.08993,0.11242,0.022483,0.044967,1),
(161,15,0.08993,0.11242,0.08993,0.11242,1),
(162, 14,0.05996, 0.08994,0.0, 0.02998,4),
(163, 14, 0.0, 0.02998,0.05996,0.08994,4),
(164,15,0.08993,0.1349,0.0,0.044967,4),
(165,15,0.0,0.044967,0.08993,0.1349,4);

INSERT IGNORE INTO simlab.residence_area
(res_id, res_residence_area_set, res_point1_lat,res_point2_lat, res_point1_long, res_point2_long,res_reasonable_subarea_no) VALUES
(166, 16, 0.0, 0.22485, 0.0, 0.22485, 100),
(167, 16, 0.0, 0.067455, 0.0, 0.0674555, 9),
(168, 16, 0.157395,0.22485,0.157395,0.22485, 9),
(169, 16, 0.157395,0.22485, 0.0, 0.0674555, 9),
(170, 16, 0.0,0.067455,0.157395,0.22485, 9),
(171, 16, 0.04497,0.067455, 0.04497,0.067455, 1),
(172, 16, 0.04497,0.067455, 0.157395,0.17988, 1),
(173, 16, 0.157395,0.17988, 0.04497,0.067455, 1),
(174, 16, 0.157395, 0.17988, 0.157395, 0.17988, 1)
;


INSERT IGNORE INTO simlab.residence_area_weighting
(rws_id, rws_name, rws_residence_set) VALUES
(1, "equal weighting munich same size", 1),
(2, "only in upper regions (1-3) munich same size",1),
(3, "basic paper p1 weighting berlin",2),
(4, "basic paper p2 weighting berlin", 2),
(5, "basic paper p3 weighting berlin", 2),
(6, "Low segment residence weighting BERLIN", 2),
(7, "Middle segment residence weighting BERLIN", 2),
(8, "High segment residence weighting BERLIN", 2),
(9, "Low segment residence are weihting small BERLIN", 3),
(10, "Middle segment residence are weihting small BERLIN", 3),
(11, "High segment residence are weihting small BERLIN", 3),
(12, "berlin complete", 4),
(13,"Clustered berlin weighting-small number", 4),
(14, "Clustered berlin weighting-larger number", 4),
(15, "Weighting for one area", 5),
(16, "Weighting for one area", 6),
(17, "Weighting for one large area", 7),
(18, "Weighting for one small area", 7),
(19, "Weighting for one large area", 8),
(20, "Weighting for one small area", 8),
(21, "Weighting for one large and two small areas", 9),
(22, "Weighting for two small areas", 9),
(23, "Weighting for three areas with two smaller", 10),
(24, "Weighting for two smaller areas", 10),
(25, "Weighting for munich AYN 100 areas",11),
(26, "Weighting for munich AYN 16 areas",11),
(27, "Weighting for munich AYN 36 areas",11),
(28, "Weighting for munich AYN 64 areas",11),
(29, "Weighting for berin 3 areas- 1 large", 12),
(30, "Weighting for berlin 3 areas- 2small", 12),
(31, "Weighting for Theoretical: 15x15min (24kmh, factor 1.0)-large area",13),
(32, "Weighting for Theoretical: 15x15min (24kmh, factor 1.0)-small and middle area",13),
(33, "Weighting for Theoretical: 15x15min (24kmh, factor 1.0)-middle area",13),
(34, "Weighting for Theo 10x10km - uniform", 14),
(35, "Weighting for Theo 10x10km - 2 cluster", 14),
(36, "Weighting for Theo 10x10km - 4 small cluster", 14),
(37, "Weighting for Theo 15x15km - uniform", 15),
(38, "Weighting for Theo 15x15km - 2 cluster", 15),
(39, "Weighting for Theo 15x15km - 4 small cluster", 15),
(40, "Weighting for Theo 10x10km - 2 other cluster", 14),
(41, "Weighting for Theo 15x15km - 2 other cluster", 15),
(42, "Weighting for Theo 25x25km - 2 cluster", 16),
(43, "Weighting for Theo 25x25km - 4 small cluster", 16),
(44, "Weighting for Theo 25x25km - uniform", 16)
;


INSERT IGNORE INTO simlab.residence_area_weight
(raw_id, raw_set, raw_residence_area, raw_weight) VALUES
(1, 1, 1, 0.1111),
(2, 1,2,0.1111),
(3, 1,3,0.1111),
(4, 1,4,0.1111),
(5, 1,5,0.1111),
(6, 1,6,0.1111),
(7, 1,7,0.1111),
(8, 1,8,0.1111),
(9, 1,9,0.1112),
(10, 2,1,0.333),
(11, 2,2,0.333),
(12, 2,3,0.334),
(13, 3,10,0.14),
(14, 3,11,0.08),
(15, 3,12,0.11),
(16, 3,13,0.15),
(17, 3,14,0.10),
(18, 3,15,0.09),
(19, 3,16,0.14),
(20, 3,17,0.09),
(21, 3,18,0.10),
(22, 4,10,0.13),
(23, 4,11,0.13),
(24, 4,12,0.11),
(25, 4,13,0.08),
(26, 4,14,0.10),
(27, 4,15,0.09),
(28, 4,16,0.16),
(29, 4,17,0.06),
(30, 4,18,0.14),
(31, 5,10,0.13),
(32, 5,11,0.13),
(33, 5,12,0.11),
(34, 5,13,0.09),
(35, 5,14,0.06),
(36, 5,15,0.09),
(37, 5,16,0.13),
(38, 5,17,0.13),
(39, 5,18,0.13),
(40, 6,10,0.15),
(41, 6,11,0.15),
(42, 6,12,0.05),
(43, 6,13,0.2),
(44, 6,14,0.2),
(45, 6,15,0.05),
(46, 6,16,0.1),
(47, 6,17,0.05),
(48, 6,18,0.05),
(49, 7,10,0.1),
(50, 7,11,0.1),
(51, 7,12,0.0),
(52, 7,13,0.15),
(53, 7,14,0.25),
(54, 7,15,0.05),
(55, 7,16,0.15),
(56, 7,17,0.15),
(57, 7,18,0.05),
(58, 8,10,0.0),
(59, 8,11,0.0),
(60, 8,12,0.0),
(61, 8,13,0.0),
(62, 8,14,0.25),
(63, 8,15,0.25),
(64, 8,16,0.0),
(65, 8,17,0.25),
(66, 8,18,0.25),
(67, 9,19,0.4),
(68, 9,20,0.4),
(69, 9,21,0.2),
(70, 10,19,0.2),
(71, 10,20,0.45),
(72, 10,21,0.35),
(73, 11,19,0.1),
(74, 11,20,0.45),
(75, 11,21,0.45),
(76, 12, 22, 1),
(77, 12, 23, 0),
(78, 12, 24, 0),
(79, 12, 25, 0),
(80, 12, 26, 0),
(81, 12, 27, 0),
(82, 12, 28, 0),
(83, 12, 29, 0),
(84, 13, 22, 0),
(85, 13, 23, 0.34),
(86, 13, 24, 0),
(87, 13, 25, 0.33),
(88, 13, 26, 0.33),
(89, 13, 27, 0),
(90, 13, 28, 0),
(91, 13, 29, 0),
(92, 14, 22, 0),
(93, 14, 23, 0),
(94, 14, 24, 0.2),
(95, 14, 25, 0),
(96, 14, 26, 0.2),
(97, 14, 27, 0.2),
(98, 14, 28, 0.2),
(99, 14, 29, 0.2),
(100, 15, 30, 1),
(101,16,31,1),
(102, 17, 32, 1.00),
(103, 17, 33, 0.00),
(104, 18, 32, 0.00),
(105, 18, 33, 1.00),
(106, 19, 34, 1.00),
(107, 19, 35, 0.00),
(108, 20, 34, 0.00),
(109, 20, 35, 1.00),
(110, 21, 36, 0.1),
(111, 21, 37, 0.45),
(112, 21, 38, 0.45),
(113, 22, 36, 0.00),
(114, 22, 37, 0.50),
(115, 22, 38, 0.50),
(116, 23, 39, 0.50),
(117, 23, 40, 0.50),
(118, 23, 41, 0.00),
(119, 24, 39, 2/3),
(120, 24, 40, 0),
(121, 24, 41, 1/3),
(122,25,42,0),
(123,25,43,0),
(124,25,44,0),
(125,25,45,0),
(126,25,46,0.00715990453460621),
(127,25,47,0.00238663484486874),
(128,25,48,0),
(129,25,49,0),
(130,25,50,0),
(131,25,51,0),
(132,25,52,0),
(133,25,53,0),
(134,25,54,0),
(135,25,55,0.0190930787589499),
(136,25,56,0.0238663484486874),
(137,25,57,0),
(138,25,58,0.00238663484486874),
(139,25,59,0.00954653937947494),
(140,25,60,0),
(141,25,61,0),
(142,25,62,0),
(143,25,63,0),
(144,25,64,0),
(145,25,65,0.00954653937947494),
(146,25,66,0.0310262529832936),
(147,25,67,0.0214797136038186),
(148,25,68,0.0429594272076372),
(149,25,69,0.00954653937947494),
(150,25,70,0.0167064439140811),
(151,25,71,0.00477326968973747),
(152,25,72,0),
(153,25,73,0),
(154,25,74,0),
(155,25,75,0.0238663484486874),
(156,25,76,0.0238663484486874),
(157,25,77,0.0787589498806683),
(158,25,78,0.0548926014319809),
(159,25,79,0.0238663484486874),
(160,25,80,0.00715990453460621),
(161,25,81,0.0167064439140811),
(162,25,82,0),
(163,25,83,0.00715990453460621),
(164,25,84,0.0334128878281623),
(165,25,85,0.00715990453460621),
(166,25,86,0.0429594272076372),
(167,25,87,0.0883054892601432),
(168,25,88,0.0620525059665871),
(169,25,89,0.0214797136038186),
(170,25,90,0),
(171,25,91,0),
(172,25,92,0),
(173,25,93,0.00954653937947494),
(174,25,94,0.00238663484486874),
(175,25,95,0.00477326968973747),
(176,25,96,0.0262529832935561),
(177,25,97,0.0190930787589499),
(178,25,98,0.0286396181384248),
(179,25,99,0.0214797136038186),
(180,25,100,0),
(181,25,101,0),
(182,25,102,0.00238663484486874),
(183,25,103,0),
(184,25,104,0.00715990453460621),
(185,25,105,0.00477326968973747),
(186,25,106,0.0429594272076372),
(187,25,107,0.0429594272076372),
(188,25,108,0.0381861575178998),
(189,25,109,0.00238663484486874),
(190,25,110,0),
(191,25,111,0),
(192,25,112,0),
(193,25,113,0),
(194,25,114,0),
(195,25,115,0),
(196,25,116,0.0119331742243437),
(197,25,117,0.00238663484486874),
(198,25,118,0.0334128878281623),
(199,25,119,0),
(200,25,120,0),
(201,25,121,0),
(202,25,122,0),
(203,25,123,0),
(204,25,124,0),
(205,25,125,0.00238663484486874),
(206,25,126,0),
(207,25,127,0.00238663484486874),
(208,25,128,0),
(209,25,129,0),
(210,25,130,0),
(211,25,131,0),
(212,25,132,0),
(213,25,133,0),
(214,25,134,0),
(215,25,135,0),
(216,25,136,0.00238663484486874),
(217,25,137,0),
(218,25,138,0),
(219,25,139,0),
(220,25,140,0),
(221,25,141,0),
(222,26,42,0),
(223,26,43,0),
(224,26,44,0),
(225,26,45,0),
(226,26,46,0),
(227,26,47,0),
(228,26,48,0),
(229,26,49,0),
(230,26,50,0),
(231,26,51,0),
(232,26,52,0),
(233,26,53,0),
(234,26,54,0),
(235,26,55,0),
(236,26,56,0),
(237,26,57,0),
(238,26,58,0),
(239,26,59,0),
(240,26,60,0),
(241,26,61,0),
(242,26,62,0),
(243,26,63,0),
(244,26,64,0),
(245,26,65,0),
(246,26,66,0),
(247,26,67,0),
(248,26,68,0),
(249,26,69,0),
(250,26,70,0),
(251,26,71,0),
(252,26,72,0),
(253,26,73,0),
(254,26,74,0),
(255,26,75,0.0404858299595142),
(256,26,76,0.0404858299595142),
(257,26,77,0.133603238866397),
(258,26,78,0.0931174089068826),
(259,26,79,0),
(260,26,80,0),
(261,26,81,0),
(262,26,82,0),
(263,26,83,0),
(264,26,84,0),
(265,26,85,0.0121457489878543),
(266,26,86,0.0728744939271254),
(267,26,87,0.149797570850202),
(268,26,88,0.105263157894737),
(269,26,89,0),
(270,26,90,0),
(271,26,91,0),
(272,26,92,0),
(273,26,93,0),
(274,26,94,0),
(275,26,95,0.00809716599190283),
(276,26,96,0.0445344129554656),
(277,26,97,0.0323886639676114),
(278,26,98,0.048582995951417),
(279,26,99,0),
(280,26,100,0),
(281,26,101,0),
(282,26,102,0),
(283,26,103,0),
(284,26,104,0),
(285,26,105,0.00809716599190283),
(286,26,106,0.0728744939271254),
(287,26,107,0.0728744939271254),
(288,26,108,0.0647773279352227),
(289,26,109,0),
(290,26,110,0),
(291,26,111,0),
(292,26,112,0),
(293,26,113,0),
(294,26,114,0),
(295,26,115,0),
(296,26,116,0),
(297,26,117,0),
(298,26,118,0),
(299,26,119,0),
(300,26,120,0),
(301,26,121,0),
(302,26,122,0),
(303,26,123,0),
(304,26,124,0),
(305,26,125,0),
(306,26,126,0),
(307,26,127,0),
(308,26,128,0),
(309,26,129,0),
(310,26,130,0),
(311,26,131,0),
(312,26,132,0),
(313,26,133,0),
(314,26,134,0),
(315,26,135,0),
(316,26,136,0),
(317,26,137,0),
(318,26,138,0),
(319,26,139,0),
(320,26,140,0),
(321,26,141,0),
(322,27,42,0),
(323,27,43,0),
(324,27,44,0),
(325,27,45,0),
(326,27,46,0),
(327,27,47,0),
(328,27,48,0),
(329,27,49,0),
(330,27,50,0),
(331,27,51,0),
(332,27,52,0),
(333,27,53,0),
(334,27,54,0),
(335,27,55,0),
(336,27,56,0),
(337,27,57,0),
(338,27,58,0),
(339,27,59,0),
(340,27,60,0),
(341,27,61,0),
(342,27,62,0),
(343,27,63,0),
(344,27,64,0),
(345,27,65,0.0110497237569061),
(346,27,66,0.0359116022099448),
(347,27,67,0.0248618784530386),
(348,27,68,0.0497237569060773),
(349,27,69,0.0110497237569061),
(350,27,70,0),
(351,27,71,0),
(352,27,72,0),
(353,27,73,0),
(354,27,74,0),
(355,27,75,0.0276243093922652),
(356,27,76,0.0276243093922652),
(357,27,77,0.0911602209944752),
(358,27,78,0.0635359116022099),
(359,27,79,0.0276243093922652),
(360,27,80,0),
(361,27,81,0),
(362,27,82,0),
(363,27,83,0),
(364,27,84,0.0386740331491713),
(365,27,85,0.00828729281767956),
(366,27,86,0.0497237569060773),
(367,27,87,0.102209944751381),
(368,27,88,0.0718232044198895),
(369,27,89,0.0248618784530386),
(370,27,90,0),
(371,27,91,0),
(372,27,92,0),
(373,27,93,0),
(374,27,94,0.00276243093922652),
(375,27,95,0.00552486187845304),
(376,27,96,0.0303867403314917),
(377,27,97,0.0220994475138122),
(378,27,98,0.0331491712707182),
(379,27,99,0.0248618784530386),
(380,27,100,0),
(381,27,101,0),
(382,27,102,0),
(383,27,103,0),
(384,27,104,0.00828729281767956),
(385,27,105,0.00552486187845304),
(386,27,106,0.0497237569060773),
(387,27,107,0.0497237569060773),
(388,27,108,0.0441988950276243),
(389,27,109,0.00276243093922652),
(390,27,110,0),
(391,27,111,0),
(392,27,112,0),
(393,27,113,0),
(394,27,114,0),
(395,27,115,0),
(396,27,116,0.0138121546961326),
(397,27,117,0.00276243093922652),
(398,27,118,0.0386740331491713),
(399,27,119,0),
(400,27,120,0),
(401,27,121,0),
(402,27,122,0),
(403,27,123,0),
(404,27,124,0),
(405,27,125,0),
(406,27,126,0),
(407,27,127,0),
(408,27,128,0),
(409,27,129,0),
(410,27,130,0),
(411,27,131,0),
(412,27,132,0),
(413,27,133,0),
(414,27,134,0),
(415,27,135,0),
(416,27,136,0),
(417,27,137,0),
(418,27,138,0),
(419,27,139,0),
(420,27,140,0),
(421,27,141,0),
(422,28,42,0),
(423,28,43,0),
(424,28,44,0),
(425,28,45,0),
(426,28,46,0),
(427,28,47,0),
(428,28,48,0),
(429,28,49,0),
(430,28,50,0),
(431,28,51,0),
(432,28,52,0),
(433,28,53,0),
(434,28,54,0),
(435,28,55,0.0198019801980198),
(436,28,56,0.0247524752475248),
(437,28,57,0),
(438,28,58,0.00247524752475248),
(439,28,59,0.0099009900990099),
(440,28,60,0),
(441,28,61,0),
(442,28,62,0),
(443,28,63,0),
(444,28,64,0),
(445,28,65,0.0099009900990099),
(446,28,66,0.0321782178217822),
(447,28,67,0.0222772277227723),
(448,28,68,0.0445544554455445),
(449,28,69,0.0099009900990099),
(450,28,70,0.0173267326732673),
(451,28,71,0),
(452,28,72,0),
(453,28,73,0),
(454,28,74,0),
(455,28,75,0.0247524752475248),
(456,28,76,0.0247524752475248),
(457,28,77,0.0816831683168317),
(458,28,78,0.0569306930693069),
(459,28,79,0.0247524752475248),
(460,28,80,0.00742574257425743),
(461,28,81,0),
(462,28,82,0),
(463,28,83,0.00742574257425743),
(464,28,84,0.0346534653465346),
(465,28,85,0.00742574257425743),
(466,28,86,0.0445544554455445),
(467,28,87,0.0915841584158416),
(468,28,88,0.0643564356435643),
(469,28,89,0.0222772277227723),
(470,28,90,0),
(471,28,91,0),
(472,28,92,0),
(473,28,93,0.0099009900990099),
(474,28,94,0.00247524752475248),
(475,28,95,0.00495049504950495),
(476,28,96,0.0272277227722772),
(477,28,97,0.0198019801980198),
(478,28,98,0.0297029702970297),
(479,28,99,0.0222772277227723),
(480,28,100,0),
(481,28,101,0),
(482,28,102,0),
(483,28,103,0),
(484,28,104,0.00742574257425743),
(485,28,105,0.00495049504950495),
(486,28,106,0.0445544554455445),
(487,28,107,0.0445544554455445),
(488,28,108,0.0396039603960396),
(489,28,109,0.00247524752475248),
(490,28,110,0),
(491,28,111,0),
(492,28,112,0),
(493,28,113,0),
(494,28,114,0),
(495,28,115,0),
(496,28,116,0.0123762376237624),
(497,28,117,0.00247524752475248),
(498,28,118,0.0346534653465346),
(499,28,119,0),
(500,28,120,0),
(501,28,121,0),
(502,28,122,0),
(503,28,123,0),
(504,28,124,0),
(505,28,125,0.00247524752475248),
(506,28,126,0),
(507,28,127,0.00247524752475248),
(508,28,128,0),
(509,28,129,0),
(510,28,130,0),
(511,28,131,0),
(512,28,132,0),
(513,28,133,0),
(514,28,134,0),
(515,28,135,0),
(516,28,136,0),
(517,28,137,0),
(518,28,138,0),
(519,28,139,0),
(520,28,140,0),
(521,28,141,0),
(522, 29, 142, 1),
(523,29,143,0),
(524,29,144,0),
(525, 30, 142, 0),
(526, 30, 143, 0.67),
(527,30,144,0.33),
(528,31,145,1.0),
(529, 31, 146, 0.0),
(530, 31, 147, 0.0),
(531, 32, 145,0.0),
(532, 32, 146, 0.5),
(533, 32, 147, 0.5),
(534, 33, 145, 0.0),
(535, 33, 146, 0.0),
(536, 33, 147, 1.0),
(537, 34, 148, 1.0),
(538, 34, 149, 0.0),
(539, 34, 150, 0.0),
(540, 34, 151, 0.0),
(541, 34, 152, 0.0),
(542, 34, 153, 0.0),
(543, 34, 154, 0.0),
(544, 35, 148, 0.0),
(545, 35, 149, 0.5),
(546, 35, 150, 0.5),
(547, 35, 151, 0.0),
(548, 35, 152, 0.0),
(549, 35, 153, 0.0),
(550, 35, 154, 0.0),
(551, 36, 148, 0.0),
(552, 36, 149, 0.0),
(553, 36, 150, 0.0),
(554, 36, 151, 0.25),
(555, 36, 152, 0.25),
(556, 36, 153, 0.25),
(557, 36, 154, 0.25),
(558, 37, 155, 1.0),
(559, 37, 156, 0.0),
(560, 37, 157, 0.0),
(561, 37, 158, 0.0),
(562, 37, 159, 0.0),
(563, 37, 160, 0.0),
(564, 37, 161, 0.0),
(565, 38, 155, 0.0),
(566, 38, 156, 0.5),
(567, 38, 157, 0.5),
(568, 38, 158, 0.0),
(569, 38, 159, 0.0),
(570, 38, 160, 0.0),
(571, 38, 161, 0.0),
(572, 39, 155, 0.0),
(573, 39, 156, 0.0),
(574, 39, 157, 0.0),
(575, 39, 158, 0.25),
(576, 39, 159, 0.25),
(577, 39, 160, 0.25),
(578, 39, 161, 0.25),
(579, 34, 162, 0.0),
(580, 34, 163, 0.0),
(581, 35, 162, 0.0),
(582, 35, 163, 0.0),
(583, 36, 162, 0.0),
(584, 36, 163, 0.0),
(585, 37, 164, 0.0),
(586, 37, 165, 0.0),
(587, 38, 164, 0.0),
(588, 38, 165, 0.0),
(589, 39, 164, 0.0),
(590, 39, 165, 0.0),
(591, 40, 148, 0.0),
(592, 40, 149, 0.0),
(593, 40, 150, 0.0),
(594, 40, 151, 0.0),
(595, 40, 152, 0.0),
(596, 40, 153, 0.0),
(597, 40, 154, 0.0),
(598, 40, 162, 0.5),
(599, 40, 163, 0.5),
(600, 41, 155, 0.0),
(601, 41, 156, 0.0),
(602, 41, 157, 0.0),
(603, 41, 158, 0.0),
(604, 41, 159, 0.0),
(605, 41, 160, 0.0),
(606, 41, 161, 0.0),
(607, 41, 164, 0.5),
(608, 41, 165, 0.5),
(609, 42, 166, 0.0),
(610, 42, 167, 0.5), (611, 42, 168, 0.5), (612, 42, 169, 0.0), (613, 42, 170, 0.0),
(614, 42, 171, 0.0), (615, 42, 172, 0.0), (616, 42, 173, 0.0), (617, 42, 174, 0.0),
(618, 43, 166, 0.0),
(619, 43, 167, 0.0), (620, 43, 168, 0.0), (621, 43, 169, 0.0), (622, 43, 170, 0.0),
(623, 43, 171, 0.25), (624, 43, 172, 0.25), (625, 43, 173, 0.25), (626, 43, 174, 0.25),
(627, 44, 166, 1.0),
(628, 44, 167, 0.0), (629, 44, 168, 0.0), (630, 44, 169, 0.0), (631, 44, 170, 0.0),
(632, 44, 171, 0.0), (633, 44, 172, 0.0), (634, 44, 173, 0.0), (635, 44, 174, 0.0)
;


INSERT IGNORE INTO simlab.time_window_set
(tws_id, tws_name, tws_overlapping) VALUES
(1, "testing",0),
(2, "basic paper",0),
(3, "reduced to 2 for exact dynamic programming",0),
(4, "reduced to 3 for ORS (morning, midday, afternoon)",0),
(5, "6 time windows as in AYN",0),
(6, "4 time windows 1 h",0),
(7, "Subset of Yang/Strauss with 2h tws",0),
(8, "12 1h time windows",0),
(9, "27 overlapping 1h tw - Yang/Strauss",1),
(10, "7 2h time windows - AYN",1),
(11, "12 1h time windows - ADP",0),
(12, "6 2h time windows - ADP",0),
(13, "11 2h time windows overlapping- ADP",1);




INSERT IGNORE INTO simlab.time_window 
(tw_id, tw_set,tw_start_time,tw_end_time) VALUES
(1, 1, 8, 9),
(2, 1,9,10),
(3, 1,10,11),
(4, 1,11,12),
(5, 1,12,13),
(6, 1,13,14),
(7, 1,14,15),
(8, 1,15,16),
(9, 1,16,17),
(10, 1,17,18),
(11, 1,18,19),
(12, 1,19,20),
(13, 1,20,21),
(14, 2,11,12),
(15, 2,12,13),
(16, 2,13,14),
(17, 2,14,15),
(18, 2,15,16),
(19, 2,16,17),
(20, 2,17,18),
(21, 2,18,19),
(22, 3,11,12),
(23, 3,12,13),
(24, 4,12,14),
(25, 4,14,16),
(26, 4,16,18),
(27, 5,10,12),
(28, 5,12,14),
(29, 5,14,16),
(30, 5,16,18),
(31, 5,18,20),
(32, 5,20,22),
(33, 6,10,11),
(34, 6,11,12),
(35, 6,12,13),
(36, 6,13,14),
(37, 7, 15, 17),
(38, 7, 17, 19),
(39, 7, 19, 21),
(40, 8, 10, 11),
(41, 8, 11, 12),
(42, 8, 12, 13),
(43, 8, 13, 14),
(44, 8, 14, 15),
(45, 8, 15, 16),
(46, 8, 16, 17),
(47, 8, 17, 18),
(48, 8, 18, 19),
(49, 8, 19, 20),
(50, 8, 20, 21),
(51, 8, 21, 22),
(52, 9, 8, 9),
(53, 9, 8.5, 9.5),
(54, 9, 9, 10),
(55, 9, 9.5, 10.5),
(56, 9, 10, 11),
(57, 9, 10.5, 11.5),
(58, 9, 11, 12),
(59, 9, 11.5, 12.5),
(60, 9, 12, 13),
(61, 9, 12.5, 13.5),
(62, 9, 13,14),
(63, 9, 13.5, 14.5),
(64, 9, 14,15),
(65, 9, 14.5, 15.5),
(66, 9, 15,16),
(67, 9, 15.5, 16.5),
(68, 9, 16,17),
(69, 9, 16.5, 17.5),
(70, 9, 17,18),
(71, 9, 17.5,18.5),
(72, 9, 18,19),
(73, 9, 18.5, 19.5),
(74, 9, 19,20),
(75, 9, 19.5, 20.5),
(76, 9, 20,21),
(77, 9, 20.5, 21.5),
(78, 9, 21,22),
(79, 10, 10,12),
(80, 10, 12,14),
(81, 10, 14,16),
(82, 10, 16,18),
(83, 10, 18,20),
(84, 10, 19,21),
(85, 10, 20,22),
(86, 11, 10, 11),
(87, 11, 11, 12),
(88, 11, 12, 13),
(89, 11, 13, 14),
(90, 11, 14, 15),
(91, 11, 15, 16),
(92, 11, 16, 17),
(93, 11, 17, 18),
(94, 11, 18, 19),
(95, 11, 19, 20),
(96, 11, 20,21),
(97, 11, 21, 22),
(98, 12, 10, 12),
(99, 12, 12, 14),
(100, 12, 14, 16),
(101, 12, 16, 18),
(102, 12, 18, 20),
(103, 12, 20, 22),
(104,13,10,12),
(105,13,11,13),
(106,13,12,14),
(107,13,13,15),
(108,13,14,16),
(109, 13, 15, 17),
(110, 13, 16, 18),
(111, 13, 17, 19),
(112, 13, 18, 20),
(113, 13, 19, 21),
(114, 13, 20, 22);




INSERT IGNORE INTO simlab.alternative_set
(as_id, as_name,as_tws) VALUES
(1, "testing", 1),
(2, "BISE paper", 2),
(3, "reduced to 2 for exact dynamic programming",3),
(4, "reduced to 3 (morning, midday, afternoon)", 4),
(5, "6 as in AYN", 5),
(6, "4 for ORS runtime analysis", 6),
(7, "6 as in AYN with no purchase option", 5),
(8, "Subset of Yang/Strauss with 2h tws", 7),
(9, "6 as in AYN - with no-purchase", 5),
(10,"12 tws 1h", 8),
(11, "27 tws overlapping Yang/Strauss", 9),
(12, "4tws with no-purchase", 6),
(13, "7tws 2h AYN", 10),
(14, "12 1h time windows - ADP",11),
(15, "6 2h time windows - ADP", 12),
(16, "11 2h time windows overlapping- ADP", 13);

INSERT IGNORE INTO simlab.alternative 
(alt_id, alt_set) VALUES
(1, 1),
(2, 1),
(3, 1),
(4, 1),
(5, 1),
(6, 1),
(7, 1),
(8, 1),
(9, 1),
(10, 1),
(11, 1),
(12, 1),
(13, 1),
(14, 2),
(15, 2),
(16, 2),
(17, 2),
(18, 2),
(19, 2),
(20, 2),
(21, 2),
(22, 3),
(23, 3),
(24, 4),
(25, 4),
(26, 4),
(27, 5),
(28, 5),
(29, 5),
(30, 5),
(31, 5),
(32, 5),
(33, 6),
(34, 6),
(35, 6),
(36, 6)
;


INSERT IGNORE INTO simlab.alternative 
(alt_id, alt_set, alt_no_purchase_alternative) VALUES
(37, 7,0),
(38, 7,0),
(39, 7,0),
(40, 7,0),
(41, 7,0),
(42, 7,0),
(43, 7,1),
(44,8,0),
(45, 8, 0),
(46, 8, 0),
(47, 8, 1),
(48, 4,1),
(49, 9, 0),
(50, 9, 0),
(51, 9, 0),
(52, 9, 0),
(53, 9, 0),
(54, 9, 0),
(55, 9, 1),
(56, 10, 0),
(57, 10, 0),
(58, 10, 0),
(59, 10, 0),
(60, 10, 0),
(61, 10, 0),
(62, 10, 0),
(63, 10, 0),
(64, 10, 0),
(65, 10, 0),
(66, 10, 0),
(67, 10, 0),
(68, 10, 1),
(69, 11, 0),
(70, 11, 0),
(71, 11, 0),
(72, 11, 0),
(73, 11, 0),
(74, 11, 0),
(75, 11, 0),
(76, 11, 0),
(77, 11, 0),
(78, 11, 0),
(79, 11, 0),
(80, 11, 0),
(81, 11, 0),
(82, 11, 0),
(83, 11, 0),
(84, 11, 0),
(85, 11, 0),
(86, 11, 0),
(87, 11, 0),
(88, 11, 0),
(89, 11, 0),
(90, 11, 0),
(91, 11, 0),
(92, 11, 0),
(93, 11, 0),
(94, 11, 0),
(95, 11, 0),
(96, 11, 1),
(97, 12, 0),
(98, 12,0),
(99,12,0),
(100,12,0),
(101,12,1),
(102,13,0),
(103,13,0),
(104,13,0),
(105,13,0),
(106,13,0),
(107,13,0),
(108, 13,0),
(109,13,1),
(110, 14, 0),
(111, 14, 0),
(112, 14, 0),
(113, 14, 0),
(114, 14, 0),
(115, 14, 0),
(116, 14, 0),
(117, 14, 0),
(118, 14, 0),
(119, 14, 0),
(120, 14, 0),
(121, 14, 0),
(122, 14, 1),
(123, 15, 0),
(124, 15, 0),
(125, 15, 0),
(126, 15, 0),
(127, 15, 0),
(128, 15, 0),
(129, 15, 1),
(130, 16, 0),
(131, 16, 0),
(132,16,0),
(133,16,0),
(134,16,0),
(135,16,0),
(136,16,0),
(137,16,0),
(138,16,0),
(139,16,0),
(140,16,0),
(141,16,1)

;

INSERT IGNORE INTO simlab.r_alternative_v_tw
(alternative_tw_alt,alternative_tw_tw) VALUES
(1,1),
(2,2),
(3,3),
(4,4),
(5,5),
(6,6),
(7,7),
(8,8),
(9,9),
(10,10),
(11,11),
(12,12),
(13,13),
(14,14),
(16,15),
(16,16),
(17,17),
(18,18),
(19,19),
(20,20),
(21,21),
(22,22),
(23,23),
(24,24),
(25,25),
(26,26),
(27,27),
(28,28),
(29,29),
(30,30),
(31,31),
(32,32),
(33,33),
(34,34),
(35,35),
(36,36);

INSERT IGNORE INTO simlab.r_alternative_v_tw
(alternative_tw_alt,alternative_tw_tw) VALUES
(37,27),
(38,28),
(39,29),
(40,30),
(41,31),
(42,32),
(44, 37),
(45, 38),
(46, 39),
(49,27),
(50,28),
(51,29),
(52,30),
(53,31),
(54,32),
(56,40),
(57, 41),
(58, 42),
(59, 43),
(60, 44),
(61, 45),
(62, 46),
(63, 47),
(64, 48),
(65, 49),
(66, 50),
(67, 51),
(69, 52),
(70, 53),
(71, 54),
(72, 55),
(73, 56),
(74, 57),
(75, 58),
(76, 59),
(77, 60),
(78, 61),
(79, 62),
(80, 63),
(81, 64),
(82, 65),
(83, 66),
(84, 67),
(85, 68),
(86, 69),
(87, 70),
(88, 71),
(89, 72),
(90, 73),
(91, 74),
(92, 75),
(93, 76),
(94, 77),
(95, 78),
(97,33),
(98,34),
(99,35),
(100,36),
(102, 79),
(103,80),
(104,81),
(105,82),
(106,83),
(107,84),
(108,85),
(110,86),
(111, 87),
(112, 88),
(113, 89),
(114, 90),
(115, 91),
(116, 92),
(117, 93),
(118, 94),
(119, 95),
(120, 96),
(121, 97),
(123, 98),
(124, 99),
(125, 100),
(126, 101),
(127,102),
(128, 103),
(130,104),
(131,105),
(132,106),
(133,107),
(134,108),
(135,109),
(136,110),
(137,111),
(138,112),
(139,113),
(140,114)
;


INSERT IGNORE INTO simlab.capacity_set 
(cas_id, cas_name,cas_delivery_area_set,cas_tw_set) VALUES
(1, "testing", 2, 2),
(2, "test exact dynamic programming 2tws 2", 2, 3),
(3, "test exact dynamic programming 2tws 1", 2, 3),
(4, "test exact dynamic programming 3tws 10", 2, 4),
(5, "test exact dynamic programming 6tws 10", 2,5),
(6, "ORS runtime analysis 3TW",2,4),
(7, "ORS runtime analysis 4TW",2,6),
(8, "ORS runtime analysis 3TW 4CAP",2,4);

INSERT IGNORE INTO simlab.capacity
(cap_id, cap_set,cap_tw,cap_delivery_area,cap_no) VALUES
(1, 1,14,10,2),
(2, 1,15,10,2),
(3, 1,16,10,2),
(4, 1,17,10,2),
(5, 1,18,10,2),
(6, 1,19,10,2),
(7, 1,20,10,2),
(8, 1,21,10,2),
(9, 1,14,11,2),
(10, 1,15,11,2),
(11, 1,16,11,2),
(12, 1,17,11,2),
(13, 1,18,11,2),
(14, 1,19,11,2),
(15, 1,20,11,2),
(16, 1,21,11,2),
(17, 1,14,12,2),
(18, 1,15,12,2),
(19, 1,16,12,2),
(20, 1,17,12,2),
(21, 1,18,12,2),
(22, 1,19,12,2),
(23, 1,20,12,2),
(24, 1,21,12,2),
(25, 1,14,13,2),
(26, 1,15,13,2),
(27, 1,16,13,2),
(28, 1,17,13,2),
(29, 1,18,13,2),
(30, 1,19,13,2),
(31, 1,20,13,2),
(32, 1,21,13,2),
(33, 1,14,14,2),
(34, 1,15,14,2),
(35, 1,16,14,2),
(36, 1,17,14,2),
(37, 1,18,14,2),
(38, 1,19,14,2),
(39, 1,20,14,2),
(40, 1,21,14,2),
(41, 1,14,15,2),
(42, 1,15,15,2),
(43, 1,16,15,2),
(44, 1,17,15,2),
(45, 1,18,15,2),
(46, 1,19,15,2),
(47, 1,20,15,2),
(48, 1,21,15,2),
(49, 1,14,16,2),
(50, 1,15,16,2),
(51, 1,16,16,2),
(52, 1,17,16,2),
(53, 1,18,16,2),
(54, 1,19,16,2),
(55, 1,20,16,2),
(56, 1,21,16,2),
(57, 1,14,17,2),
(58, 1,15,17,2),
(59, 1,16,17,2),
(60, 1,17,17,2),
(61, 1,18,17,2),
(62, 1,19,17,2),
(63, 1,20,17,2),
(64, 1,21,17,2),
(65, 1,14,18,2),
(66, 1,15,18,2),
(67, 1,16,18,2),
(68, 1,17,18,2),
(69, 1,18,18,2),
(70, 1,19,18,2),
(71, 1,20,18,2),
(72, 1,21,18,2),
(73, 2,22, 10,2),
(74, 2,23, 10,2),
(75, 2,22, 11,2),
(76, 2,23, 11,2),
(77, 2,22, 12,2),
(78, 2,23, 12,2),
(79, 2,22, 13,2),
(80, 2,23, 13,2),
(81, 2,22, 14,2),
(82, 2,23, 14,2),
(83, 2,22, 15,2),
(84, 2,23, 15,2),
(85, 2,22, 16,2),
(86, 2,23, 16,2),
(87, 2,22, 17,2),
(88, 2,23, 17,2),
(89, 2,22, 18,2),
(90, 2,23, 18,2),
(91, 3,22, 10,1),
(92, 3,23, 10,1),
(93, 3,22, 11,1),
(94, 3,23, 11,1),
(95, 3,22, 12,1),
(96, 3,23, 12,1),
(97, 3,22, 13,1),
(98, 3,23, 13,1),
(99, 3,22, 14,1),
(100, 3,23, 14,1),
(101, 3,22, 15,1),
(102, 3,23, 15,1),
(103, 3,22, 16,1),
(104, 3,23, 16,1),
(105, 3,22, 17,1),
(106, 3,23, 17,1),
(107, 3,22, 18,1),
(108, 3,23, 18,1),
(109, 4,24, 10,10),
(110, 4,25, 10,10),
(111, 4,26, 10,10),
(112, 4,24, 11,10),
(113, 4,25, 11,10),
(114, 4,26, 11,10),
(115, 4,24, 12,10),
(116, 4,25, 12,10),
(117, 4,26, 12,10),
(118, 4,24, 13,10),
(119, 4,25, 13,10),
(120, 4,26, 13,10),
(121, 4,24, 14,10),
(122, 4,25, 14,10),
(123, 4,26, 14,10),
(124, 4,24, 15,10),
(125, 4,25, 15,10),
(126, 4,26, 15,10),
(127, 4,24, 16,10),
(128, 4,25, 16,10),
(129, 4,26, 16,10),
(130, 4,24, 17,10),
(131, 4,25, 17,10),
(132, 4,26, 17,10),
(133, 4,24, 18,10),
(134, 4,25, 18,10),
(135, 4,26, 18,10),
(136, 5,27, 10,5),
(137, 5,28, 10,5),
(138, 5,29, 10,5),
(139, 5,30,10,5),
(140, 5,31,10,5),
(141, 5,32,10,5),
(142, 5,27,11,5),
(143, 5,28,11,5),
(144, 5,29,11,5),
(145, 5,30,11,5),
(146, 5,31,11,5),
(147, 5,32,11,5),
(148, 5,27,12,5),
(149, 5,28,12,5),
(150, 5,29,12,5),
(151, 5,30,12,5),
(152, 5,31,12,5),
(153, 5,32,12,5),
(154, 5,27,13,5),
(155, 5,28,13,5),
(156, 5,29,13,5),
(157, 5,30,13,5),
(158, 5,31,13,5),
(159, 5,32,13,5),
(160, 5,27,14,5),
(161, 5,28,14,5),
(162, 5,29,14,5),
(163, 5,30,14,5),
(164, 5,31,14,5),
(165, 5,32,14,5),
(166, 5,27,15,5),
(167, 5,28,15,5),
(168, 5,29,15,5),
(169, 5,30,15,5),
(170, 5,31,15,5),
(171, 5,32,15,5),
(172, 5,27,16,5),
(173, 5,28,16,5),
(174, 5,29,16,5),
(175, 5,30,16,5),
(176, 5,31,16,5),
(177, 5,32,16,5),
(178, 5,27,17,5),
(179, 5,28,17,5),
(180, 5,29,17,5),
(181, 5,30,17,5),
(182, 5,31,17,5),
(183, 5,32,17,5),
(184, 5,27,18,5),
(185, 5,28,18,5),
(186, 5,29,18,5),
(187, 5,30,18,5),
(188, 5,31,18,5),
(189, 5,32,18,5)
;

# NEW: Adjust to actual sets/ runtime ors!!!!
#INSERT INTO simlab.capacity
#(cap_set,cap_tw,cap_delivery_area,cap_no) VALUES
#(39,24,10,3),
#(39,25,10,3),
#(39,26,10,3),
#(39,24,11,3),
##(39,25,11,3),
#(39,26,11,3),
#(39,24,12,3),
#(39,25,12,3),
#(39,26,12,3),
#(39,24,13,3),
#(39,25,13,3),
#(39,26,13,3),
#(39,24,14,3),
#(39,25,14,3),
#(39,26,14,3),
#(39,24,15,3),
#(39,25,15,3),
#(39,26,15,3),
#(39,24,16,3),
#(39,25,16,3),
#(39,26,16,3),
#(39,24,17,3),
#(39,25,17,3),
#(39,26,17,3),
#(39,24,18,3),
#(39,25,18,3),
#(39,26,18,3),
#(40,33,10,3),
#(40,34,10,3),
#(40,35,10,3),
#(40,36,10,3),
#(40,33,11,3),
#(40,34,11,3),
#(40,35,11,3),
#(40,36,11,3),
#(40,33,12,3),
#(40,34,12,3),
#(40,35,12,3),
#(40,36,12,3),
#(40,33,13,3),
#(40,34,13,3),
#(40,35,13,3),
#(40,36,13,3),
#(40,33,14,3),
#(40,34,14,3),
#(40,35,14,3),
#(40,36,14,3),
#(40,33,15,3),
#(40,34,15,3),
#(40,35,15,3),
#(40,36,15,3),
#(40,33,16,3),
#(40,34,16,3),
#(40,35,16,3),
#(40,36,16,3),
##(40,33,17,3),
#(40,34,17,3),
#(40,35,17,3),
#(40,36,17,3),
#(40,33,18,3),
#(40,34,18,3),
#(40,35,18,3),
#(40,36,18,3);

# NEW: Adjust to actual sets/ runtime ors!!!!
#INSERT INTO simlab.capacity
#(cap_set,cap_tw,cap_delivery_area,cap_no) VALUES
#(41,24,10,4),
#(41,25,10,4),
#(41,26,10,4),
#(41,24,11,4),
#(41,25,11,4),
#(41,26,11,4),
#(41,24,12,4),
#(41,25,12,4),
#(41,26,12,4),
#(41,24,13,4),
#(41,25,13,4),
#(41,26,13,4),
#(41,24,14,4),
#(41,25,14,4),
#(41,26,14,4),
#(41,24,15,4),
#(41,25,15,4),
#(41,26,15,4),
#(41,24,16,4),
#(41,25,16,4),
#(41,26,16,4),
#(41,24,17,4),
#(41,25,17,4),
#(41,26,17,4),
#(41,24,18,4),
#(41,25,18,4),
#(41,26,18,4);

INSERT IGNORE INTO simlab.travel_time_set 
(tts_id, tts_name, tts_region) VALUES
(1, "test",1);

INSERT IGNORE INTO simlab.travel_time
(tra_id, tra_set, tra_start, tra_end, tra_pd) VALUES
(1, 1,10,11,2),
(2, 1,11,22,13);

INSERT IGNORE INTO simlab.consideration_set
(css_id, css_name, css_alternative_set) VALUES
(1, "Theo 12 1h tws flexible", 14),
(2, "Theo 12 1h tws inflexible", 14),
(3, "Theo 6 2h tws flexible", 15),
(4, "Theo 6 2h tws inflexible", 15),
(5, "Theo 11 2h overlapping flexible", 16),
(6, "Theo 11 2h overlapping inflexible",16);

INSERT IGNORE INTO simlab.consideration_set_alternative
(csa_set, csa_alternative, csa_coefficient) VALUES
(1, 110, ln(1)),
(1, 111, ln(1)),
(1, 112, ln(1)),
(1, 113, ln(1)),
(1, 114, ln(0.5)),
(1, 115, ln(0.5)),
(1, 116, ln(1)),
(1, 117, ln(1)),
(1, 118, ln(1.5)),
(1, 119, ln(1.5)),
(1, 120, ln(1)),
(1, 121, ln(1)),
(1, 122, ln(1)),
(2, 110, ln(4)),
(2, 111, ln(4)),
(2, 117, ln(0.5)),
(2, 118, ln(4)),
(2, 119, ln(4)),
(2, 122, ln(1)),
(3, 123, ln(1)),
(3, 124, ln(1)),
(3, 125, ln(0.5)),
(3, 126, ln(1)),
(3, 127, ln(1.5)),
(3, 128, ln(1)),
(3, 129, ln(1)),
(4, 123, ln(4)),
(4, 127, ln(4)),
(4, 129, ln(1)),
(5, 130, ln(1)),
(5, 131, ln(1)),
(5, 132, ln(1)),
(5, 133, ln(0.5)),
(5, 134, ln(0.5)),
(5, 135, ln(0.5)),
(5, 136, ln(1)),
(5, 137, ln(1)),
(5, 138, ln(1.5)),
(5, 139, ln(1)),
(5, 140, ln(1)),
(5, 141, ln(1)),
(6, 130, ln(4)),
(6, 137, ln(0.5)),
(6, 138, ln(4)),
(6, 141, ln(1));


INSERT IGNORE INTO simlab.demand_segment_set
(dss_id, dss_name,dss_panel,dss_demand_model_type,dss_residence_area_set, dss_alternative_set) VALUES
(1, "testing munich", 0, 3,1,2),
(2, "basic paper for berlin",0,3,2,2),
(3, "MNL demand for berlin", 0,1,2,2),
(4, "MNL demand for berlin with only 2 alt", 0,1,2,3),
(5, "MNL demand for small berlin with only 3 alt", 0,1,3,4),
(6, "MNL demand for berlin with 6 alternatives", 0,1,2,5),
(7, "MNL demand for berlin with 3 alt 9DA", 0,1,2,4),
(8, "MNL demand for berlin with less variable", 0,1,2,4) ,
(9, "MNL demand for berlin with 2*3 alternatives", 0,1,2,5),
(10, "MNL demand for berlin with 3TW indifferent", 0,1,2,4),
(11, "MNL demand for berlin with 4TW indifferent", 0,1,2,6),
(12, "MNL 6alt (+no purchase)-uniform in berlin, even tw pop", 0,1,4,7),
(13, "MNL 6alt (+no purchase)-clustered in berlin, even tw pop", 0,1,4,7),
(14, "MNL 6alt (+no purchase)-uniform in berlin, uneven tw pop", 0,1,4,7),
(15, "MNL 6alt (+no purchase)-clustered in berlin, uneven tw pop", 0,1,4,7),
(16, "MNL Subset Yang/Strauss, price", 0, 5, 5, 8),
(17, "MNL 6alt (+no purchase)- uniform in berlin avg 12 min",0,5,6,9),
(18, "MNL 12alt (+no purchase)- 1 cluster in berlin", 0, 5, 7,10),
(19, "MNL 12alt (+no purchase)- 1 cluster in berlin20x20", 0, 5, 8,10),
(20, "MNL 12alt (+no purchase) - 2 cluster in berlin20x20", 0, 5, 9, 10),
(21, "MNL 12alt (+no purchase, more extreme) - 2 cluster in berlin20x20", 0, 5, 9, 10),
(22, "MNL 12alt (+no purchase, more extreme) - 2 extreme cluster in berlin20x20", 0, 5, 10, 10),
(23, "MNL 4alt TOP visualization",0,5,8,12),
(24, "MNL 7alt AYN", 0, 5, 11,13),
(25, "MNL 7alt AYN smaller region", 0, 5, 11,13),
(26, "MNL 12alt AYN smaller region", 0, 5, 11,10),
(27, "MNL 7alt AYN smaller region second segment", 0, 5, 11,13),
(28, "MNL 27alt Yang/Strauss munich",0,5,11,11),
(29, "MNL 27alt Yang/Strauss munich 36 areas",0,5,11,11),
(30, "MNL 27alt Yang/Strauss munich 64 areas",0,5,11,11),
(31, "MNL 7alt AYN smaller region-36 areas", 0, 5, 11,13),
(32, "MNL 7alt AYN smaller region-64 areas", 0, 5, 11,13),
(33, "MNL 12alt (+ no-purchase) - 1 cluster in Berlin20x20", 0, 5, 8,10),
(34, "MNL 12alt(+no-purchase)- 2 cluster in Berlin 20x20", 0,5,12, 10),
(35, "MNL 12alt (+0) - 3 segments in theoretical1 15x15",0, 5, 13, 10),
(36, "MNL 12alt AYN smaller region-36 areas", 0, 5, 11,10),
(37, "Theo 12 tws, 2 seg, low/high, flexible/inflexible, both uniform, small region", 0, 5, 14,14),
(38, "Theo 12 tws, 2 seg, low/high, flexible/inflexible, 2 cluster/4 cluster, small region", 0,5,14,14),
(39, "Theo 6 tws, 2 seg, low/high, flexible/inflexible, both uniform, small region", 0, 5, 14,15),
(40, "Theo 6 tws, 2 seg, low/high, flexible/inflexible, 2 cluster/4 cluster, small region", 0,5,14,15),
(41, "Theo 12 tws, 2 seg, low/low, flexible/inflexible, 2 cluster/2 other cluster, small region", 0,5,14,14),
(42, "Theo 6 tws, 2 seg, low/low, flexible/inflexible, 2 cluster/2 other cluster, small region", 0,5,14,15),
(43, "Theo 12 tws, 2 seg, low/high, flexible/inflexible, both uniform, large region", 0, 5, 15,14),
(44, "Theo 12 tws, 2 seg, low/high, flexible/inflexible, 2 cluster/4 cluster, large region", 0,5,15,14),
(45, "Theo 12 tws, 2 seg, low/low, flexible/inflexible, 2 cluster/2 other cluster, large region", 0,5,15,14),
(46, "Theo 6 tws, 2 seg, low/high, flexible/inflexible, both uniform, large region", 0, 5, 15,15),
(47, "Theo 6 tws, 2 seg, low/high, flexible/inflexible, 2 cluster/4 cluster, large region", 0,5,15,15),
(48, "Theo 6 tws, 2 seg, low/low, flexible/inflexible, 2 cluster/2 other cluster, large region", 0,5,15,15),
(49, "Theo 11 overlap, 2 seg, low/high, flexible/inflexible, both uniform, small region", 0, 5, 14,16),
(50, "Theo 11 overlap, 2 seg, low/high, flexible/inflexible, both uniform, large region", 0, 5, 15,16),
(51, "Theo 11 overlap, 2 seg, low/high, flexible/inflexible, 2 cluster/4 cluster, small region", 0,5,14,16),
(52, "Theo 11 overlap, 2 seg, low/high, flexible/inflexible, 2 cluster/4 cluster, large region", 0,5,15,16),
(53, "Theo 11 overlap, 2 seg, low/low, flexible/inflexible, 2 cluster/2 other cluster, small region", 0,5,14,16),
(54, "Theo 11 overlap, 2 seg, low/low, flexible/inflexible, 2 cluster/2 other cluster, large region", 0,5,15,16),
(55, "Theo 12 tws, 2 seg, low/high, flexible/inflexible, uniform/2cluster, small region", 0, 5, 14, 14),
(56, "Theo 12 tws, 2 seg, low/high, flexible/inflexible, uniform/2cluster, large region",0,5,15,14),
(57, "Theo 6 tws, 2 seg, low/high, flexible/inflexible, uniform/2cluster, small region", 0, 5, 14, 15),
(58, "Theo 6 tws, 2 seg, low/high, flexible/inflexible, uniform/2cluster, large region", 0, 5, 15, 15),
(59, "Theo 11 overlap,  2 seg, low/high, flexible/inflexible, uniform/2cluster, small region", 0, 5, 14, 16),
(60, "Theo 11 overlap, 2 seg, low/high, flexible/inflexible, uniform/2cluster, large region", 0, 5, 15, 16),
(61, "Theo 6 tws, 2 seg, low/high, flexible/inflexible, 2 cluster/4 cluster, largest region", 0,5,16, 15),
(62, "THeo 6 tws, 2 seg, low/high, flexible/inflexible, uniform/2cluster, largest region", 0, 5, 16, 15);

INSERT IGNORE INTO simlab.demand_segment 
(dem_id, dem_set,dem_basket_value_pd,dem_residence_area_weighting, dem_social_impact_factor) VALUES
(1, 1,3, 1,0.7),
(2, 1,4,2,0.3),
(3, 2,5,3,0.9),
(4, 2,6,4,0.5),
(5, 2,7,5,0.3),
(6, 3,5,3,0.9),
(7, 3,6,4,0.5),
(8, 3,7,5,0.3),
(9, 4,5,3,0.9),
(10, 4,6,4,0.5),
(11, 4,7,5,0.3),
(12, 5,14,9,0.3),
(13, 5,15,10,0.3),
(14, 5,16,11,0.3),
(15, 6,14,6,0.44),
(16, 6,14,6,0.71),
(17, 6,15,7,0.44),
(18, 6,16,8,0.44),
(19, 5,14,9,0.9),
(20, 7,14,6,0.44),
(21, 7,14,6,0.71),
(22, 7,15,7,0.44),
(23, 7,16,8,0.44),
(24, 8,17,6,0.44),
(25, 8,17,6,0.71),
(26, 8,18,7,0.44),
(27, 8,19,8,0.44),
(28, 9,14,6,0.44),
(29, 9,14,6,0.71),
(30, 9,15,7,0.44),
(31, 9,16,8,0.44),
(32, 10,14,6,0.44),
(33, 10,14,6,0.71),
(34, 10,15,7,0.44),
(35, 10,16,8,0.44),
(36, 11,14,6,0.44),
(37, 11,14,6,0.71),
(38, 11,15,7,0.44),
(39, 11,16,8,0.44);



INSERT IGNORE INTO simlab.demand_segment 
(dem_id, dem_set,dem_basket_value_pd,dem_residence_area_weighting) VALUES
(40, 12, 20, 12),
(41, 12, 21, 12),
(42, 12, 22, 12),
(43, 13, 20, 12),
(44, 13, 21, 14),
(45, 13, 22, 13),
(46, 14, 20, 12),
(47, 14, 21, 12),
(48, 14, 22, 12),
(49, 15, 20, 12),
(50, 15, 21, 14),
(51, 15, 22, 13);

INSERT IGNORE INTO simlab.demand_segment 
(dem_id, dem_set,dem_basket_value_pd,dem_residence_area_weighting, dem_basic_utility) VALUES
(52, 16, 23, 15, -2.5087),
(53,17,20,16,0),
(54, 17, 21, 16, 0),
(55, 18, 20, 17, 0),
(56, 18, 25, 18, 0),
(57, 19, 29, 19, 0),
(58, 19, 30, 20, 0),
(59, 20, 29, 21, 0),
(60, 20, 30, 22, 0),
(61, 21, 29, 21, 0),
(62, 21, 30, 22, 0),
(63, 22, 29, 23, 0),
(64, 22, 30, 24, 0),
(65, 23, 29, 19,0),
(66,23,30,20,0),
(67,24,33,25,0.917),
(68,25,33,26,0.917),
(69,26,33,26,0.917),
(70,27,35,26,0.917),
(71,27,36,26,0.917),
(72,28, 40,26,-2.8618),
(73,29, 40,27,-2.8618),
(74,30, 40,28,-2.8618),
(75,31,33,27,0.917),
(76,32,33,28,0.917),
(77,33,38,19,0),
(78,33,39,20,0),
(79,34,38, 29,0),
(80, 34, 39, 30, 0),
(81, 35, 38, 31,0),
(82, 35, 38, 32,0),
(83, 35, 39, 33,0),
(84, 36, 33,27,0.917);

INSERT IGNORE INTO simlab.demand_segment 
(dem_id, dem_set,dem_basket_value_pd,dem_residence_area_weighting, dem_basic_utility, dem_consideration_set) VALUES
(85, 37, 43,34, 0,1),
(86, 37, 44,34, 0,2),
(87, 38, 43,35, 0,1),
(88, 38, 44,36, 0,2),
(89, 39, 43,34, 0,3),
(90, 39, 44,34, 0,4),
(91, 40, 43,35, 0,3),
(92, 40, 44,36, 0,4),
(93, 41, 43,35,0,1),
(94, 41, 43,40,0,2),
(95, 42, 43,35,0,3),
(96, 42, 43,40,0,4),
(97, 43, 43,37, 0,1),
(98, 43, 44,37, 0,2),
(99, 44, 43,38, 0,1),
(100, 44, 44,39, 0,2),
(101, 45, 43,38,0,1),
(102, 45, 43,41,0,2),
(103, 46, 43,37, 0,3),
(104, 46, 44,37, 0,4),
(105, 47, 43,38, 0,3),
(106, 47, 44,39, 0,4),
(107, 48, 43,38,0,3),
(108, 48, 43,41,0,4),
(109, 49, 43,34,0,5),
(110, 49, 44,34,0,6),
(111, 50, 43,37,0,5),
(112, 50, 44,37,0,6),
(113, 51, 43,35,0,5),
(114, 51, 44,36,0,6),
(115, 52, 43,38,0,5),
(116, 52, 44,39,0,6),
(117, 53, 43,35,0,5),
(118, 53, 43,40,0,6),
(119, 54, 43,38,0,5),
(120, 54, 43,41,0,6),
(121, 55, 43,34, 0,1),
(122, 55, 44,35, 0,2),
(123, 56, 43,37, 0,1),
(124, 56, 44,38, 0,2),
(125, 57, 43, 34, 0, 3),
(126, 57, 44, 35, 0, 4),
(127, 58, 43, 37, 0, 3),
(128, 58, 44, 38, 0, 4),
(129, 59, 43, 34, 0, 5),
(130, 59, 44, 35, 0, 6),
(131, 60, 43, 37, 0, 5),
(132, 60, 44, 38, 0, 6);

INSERT IGNORE INTO simlab.demand_segment 
(dem_id, dem_set,dem_basket_value_pd,dem_residence_area_weighting, dem_basic_utility, dem_consideration_set) VALUES
(133, 61, 43,42,0,3),
(134, 61, 44,43,0,4),
(135, 62, 43, 44,0,3),
(136, 62, 44, 42,0,4)
;



INSERT IGNORE INTO simlab.r_demand_segment_v_variable_type
(dem_variable_dem, dem_variable_var, dem_variable_coefficient) VALUES
(52, 2, -0.0766),
(53,2,-0.1),
(54,2,-0.1),
(55,2,-0.1),
(56,2,-0.1),
(57, 2, -0.0766),
(58, 2, -0.0766),
(59, 2, -0.0766),
(60, 2, -0.0766),
(61, 2, -0.0766),
(62, 2, -0.0766),
(63, 2, -0.0766),
(64, 2, -0.0766),
(65, 2,-0.0766),
(66, 2,-0.0766),
(67,2,-0.0766),
(68,2,0),
(69,2,0),
(70,2,0),
(71,2,0),
(72,2, -0.0880),
(73,2, -0.0880),
(74,2, -0.0880),
(75,2, 0),
(76,2, 0),
(77,2,0),
(78,2,0),
(79,2,-0.2),
(80,2,-0.2),
(81,2,0),
(82, 2, 0),
(83,2, 0),
(84, 2, 0),
(85, 2, 0),
(86, 2, 0),
(87, 2, 0),
(88, 2, 0),
(89, 2, 0),
(90, 2, 0),
(91, 2, 0),
(92, 2, 0),
(93, 2, 0),
(94, 2, 0),
(95, 2, 0),
(96, 2, 0),
(97,2,0),
(98,2,0),
(99,2,0),
(100,2,0),
(101,2,0),
(102,2,0),
(103,2,0),
(104,2,0),
(105,2,0),
(106,2,0),
(107,2,0),
(108,2,0),
(109,2,0),
(110,2,0),
(111,2,0),
(112,2,0),
(113,2,0),
(114,2,0),
(115,2,0),
(116,2,0),
(117,2,0),
(118,2,0),
(119,2,0),
(120,2,0),
(121,2,0),
(122,2,0),
(123,2,0),
(124,2,0),
(125,2,0),
(126,2,0),
(127,2,0),
(128,2,0),
(129,2,0),
(130,2,0),
(131,2,0),
(132,2,0),
(133,2,0),
(134,2,0),
(135,2,0),
(136,2,0)
;

INSERT IGNORE INTO simlab.consideration_set_alternative
(csa_id, csa_demand_segment,csa_alternative,csa_weight) VALUES
(1, 1,1,0.05),
(2, 1,2,0.05),
(3, 1,3,0.05),
(4, 1,4,0.05),
(5, 1,5,0.05),
(6, 1,6,0.05),
(7, 1,7,0.05),
(8, 1,8,0.05),
(9, 1,9,0.05),
(10, 1,10,0.15),
(11, 1,11,0.15),
(12, 1,12,0.15),
(13, 1,13,0.10),
(14, 2,1,0.10),
(15, 2,10,0.25),
(16, 2,11,0.25),
(17, 2,12,0.25),
(18, 2,13,0.15),
(19, 3,14,0.10),
(20, 3,15,0.10),
(21, 3,16,0.20),
(22, 3,17,0.20),
(23, 3,18,0.20),
(24, 3,19,0.10),
(25, 3,20,0.05),
(26, 3,21,0.05),
(27, 4,14,0.05),
(28, 4,15,0.05),
(29, 4,16,0.05),
(30, 4,17,0.15),
(31, 4, 18,0.20),
(32, 4,19,0.20),
(33, 4,20,0.20),
(34, 4,21,0.10),
(35, 5,14,0.05),
(36, 5,15,0.05),
(37, 5,16,0.05),
(38, 5,17,0.05),
(39, 5,18,0.10),
(40, 5,19,0.20),
(41, 5,20,0.30),
(42, 5,21,0.20)
;

INSERT IGNORE INTO simlab.consideration_set_alternative
(csa_id, csa_demand_segment,csa_alternative,csa_coefficient) VALUES
(43, 6,14,LN(100)),
(44, 6,15,LN(100)),
(45, 6,16,LN(200)),
(46, 6,17,LN(200)),
(47, 6,18,LN(200)),
(48, 6,19,LN(100)),
(49, 6,20,LN(50)),
(50, 6,21,LN(50)),
(51, 7,14,LN(50)),
(52, 7,15,LN(50)),
(53, 7,16,LN(50)),
(54, 7,17,LN(150)),
(55, 7,18,LN(200)),
(56, 7,19,LN(200)),
(57, 7,20,LN(200)),
(58, 7,21,LN(100)),
(59, 8,14,LN(50)),
(60, 8,15,LN(50)),
(61, 8,16,LN(50)),
(62, 8,17,LN(50)),
(63, 8,18,LN(100)),
(64, 8,19,LN(200)),
(65, 8,20,LN(300)),
(66, 8,21,LN(200)),
(67, 9,22,LN(3)),
(68, 9,23,LN(3)),
(69, 10,22,LN(6)),
(70, 10,23,LN(3)),
(71, 11,22,LN(3)),
(72, 11,23,LN(6)),
(73, 12,24,LN(30)),
(74, 12,25,LN(30)),
(75, 12,26, LN(40)),
(76, 13,24,LN(30)),
(77, 13,25,LN(10)),
(78, 13,26, LN(60)),
(79, 14,24,LN(10)),
(80, 14,25,LN(10)),
(81, 14,26, LN(80)),
(82, 15,27,LN(16)),
(83, 15,28,LN(8)),
(84, 15,29,LN(4)),
(85, 15,30,LN(5)),
(86, 15,31,LN(53)),
(87, 15,32,LN(14)),
(88, 16,27,LN(16)),
(89, 16,28,LN(8)),
(90, 16,29,LN(4)),
(91, 16,30,LN(5)),
(92, 16,31,LN(53)),
(93, 16,32,LN(14)),
(94, 17,27,LN(10)),
(95, 17,28,LN(1)),
(96, 17,29,LN(1)),
(97, 17,30,LN(1)),
(98, 17,31,LN(68)),
(99, 17,32,LN(19)),
(100, 18,27,LN(1)),
(101, 18,28,LN(1)),
(102, 18,29,LN(1)),
(103, 18,30,LN(1)),
(104, 18,31,LN(85)),
(105, 18,32,LN(11)),
(106, 19,24,LN(30)),
(107, 19,25,LN(30)),
(108, 19,26, LN(40)),
(109, 20,24,LN(30)),
(110, 20,25,LN(30)),
(111, 20,26, LN(40)),
(112, 21,24,LN(30)),
(113, 21,25,LN(30)),
(114, 21,26, LN(40)),
(115, 22,24,LN(40)),
(116, 22,25,LN(5)),
(117, 22,26, LN(55)),
(118, 23,24,LN(5)),
(119, 23,25,LN(5)),
(120, 23,26, LN(90)),
(121, 24,24,LN(30)),
(122, 24,25,LN(30)),
(123, 24,26, LN(40)),
(124, 25,24,LN(30)),
(125, 25,25,LN(30)),
(126, 25,26, LN(40)),
(127, 26,24,LN(40)),
(128, 26,25,LN(5)),
(129, 26,26, LN(55)),
(130, 27,24,LN(5)),
(131, 27,25,LN(5)),
(132, 27,26, LN(90)),
(133, 28,27,LN(30)),
(134, 28,28,LN(30)),
(135, 28,29,LN(40)),
(136, 28,30,LN(30)),
(137, 28,31,LN(30)),
(138, 28,32,LN(40)),
(139, 29,27,LN(30)),
(140, 29,28,LN(30)),
(141, 29,29,LN(40)),
(142, 29,30,LN(30)),
(143, 29,31,LN(30)),
(144, 29,32,LN(40)),
(145, 30,27,LN(40)),
(146, 30,28,LN(5)),
(147, 30,29,LN(55)),
(148, 30,30,LN(40)),
(149, 30,31,LN(5)),
(150, 30,32,LN(55)),
(151, 31,27,LN(5)),
(152, 31,28,LN(5)),
(153, 31,29,LN(90)),
(154, 31,30,LN(5)),
(155, 31,31,LN(5)),
(156, 31,32,LN(90)),
(157, 32,24,LN(30)),
(158, 32,25,LN(30)),
(159, 32,26, LN(30)),
(160, 33,24,LN(30)),
(161, 33,25,LN(30)),
(162, 33,26, LN(30)),
(163, 34,24,LN(30)),
(164, 34,25,LN(30)),
(165, 34,26, LN(30)),
(166, 35,24,LN(30)),
(167, 35,25,LN(30)),
(168, 35,26, LN(30)),
(169, 36,33,LN(30)),
(170, 36,34,LN(30)),
(171, 36,35, LN(30)),
(172, 36,36, LN(30)),
(173, 37,33,LN(30)),
(174, 37,34,LN(30)),
(175, 37,35, LN(30)),
(176, 37,36, LN(30)),
(177, 38,33,LN(30)),
(178, 38,34,LN(30)),
(179, 38,35, LN(30)),
(180, 38,36, LN(30)),
(181, 39,33,LN(30)),
(182, 39,34,LN(30)),
(183, 39,35, LN(30)),
(184, 39,36, LN(30));

INSERT IGNORE INTO simlab.consideration_set_alternative
(csa_id, csa_demand_segment,csa_alternative,csa_coefficient) VALUES
(185, 40, 37, 1),
(186, 40, 38, 1),
(187, 40, 39, 1),
(188, 40, 40, 1),
(189, 40, 41, 1),
(190, 40, 42, 1),
(191, 40, 43, 0),
(192, 41, 37, 1),
(193, 41, 38, 1),
(194, 41, 39, 1),
(195, 41, 40, 1),
(196, 41, 41, 1),
(197, 41, 42, 1),
(198, 41, 43, 0),
(199, 42, 37, 1),
(200, 42, 38, 1),
(201, 42, 39, 1),
(202, 42, 40, 1),
(203, 42, 41, 1),
(204, 42, 42, 1),
(205, 42, 43, 0),
(206, 43, 37, 1),
(207, 43, 38, 1),
(208, 43, 39, 1),
(209, 43, 40, 1),
(210, 43, 41, 1),
(211, 43, 42, 1),
(212, 43, 43, 0),
(213, 44, 37, 1),
(214, 44, 38, 1),
(215, 44, 39, 1),
(216, 44, 40, 1),
(217, 44, 41, 1),
(218, 44, 42, 1),
(219, 44, 43, 0),
(220, 45, 37, 1),
(221, 45, 38, 1),
(222, 45, 39, 1),
(223, 45, 40, 1),
(224, 45, 41, 1),
(225, 45, 42, 1),
(226, 45, 43, 0),
(227, 46, 37, 1.29),
(228, 46, 38, 1),
(229, 46, 39, 1),
(230, 46, 40, 1),
(231, 46, 41, 1.29),
(232, 46, 42, 1.29),
(233, 46, 43, 0),
(234, 47, 38, 1),
(235, 47, 40, 2.4),
(236, 47, 41, 1),
(237, 47, 42, 1),
(238, 47, 43, 0),
(239, 48, 41, 2.8),
(240, 48, 42, 1),
(241, 49, 43, 0),
(242, 49, 37, 1.29),
(243, 49, 38, 1),
(244, 49, 39, 1),
(245, 49, 40, 1),
(246, 49, 41, 1.29),
(247, 49, 42, 1.29),
(248, 49, 43, 0),
(249, 50, 38, 1),
(250, 50, 40, 1),
(251, 50, 41, 2.4),
(252, 50, 42, 1),
(253, 50, 43, 0),
(254, 51, 41, 2.8),
(255, 51, 42, 1),
(256, 51, 43, 0),
(257, 52, 44, -0.161),
(258, 52, 45, 0),
(259, 52, 46, 0.2533),
(260, 52, 47, 2.5087),
(261, 20,48,0),
(262, 21, 48, 0),
(263, 22, 48, 0),
(264, 23, 48, 0),
(265, 53, 49, 0),
(266,53,50,0),
(267,53,51,ln(0.5)),
(268,53,52,0),
(269,53,53,ln(2)),
(270,53,54,0),
(271,53,55,0),
(272, 54, 49, 0),
(276,54,53,ln(12)),
(277,54,54,ln(2)),
(278,54,55,0),
(279, 55,56,0),
(280,55,57,0),
(281, 55, 58, ln(2)),
(282, 55, 59, ln(2)),
(283, 55, 60, 0),
(284, 55, 61, 0),
(285, 55, 62, ln(2)),
(286, 55, 63, ln(4)),
(287, 55, 64, ln(4)),
(288,55,65,ln(2)),
(289, 55, 66, ln(2)),
(290, 55, 67, 0),
(291, 55, 68, 0),
(292, 56, 58,0),
(293, 56, 59, 0),
(294, 56,62,ln(2)),
(295,56,63,ln(12)),
(296, 56, 64, ln(12)),
(297, 56, 65, ln(2)),
(298, 56, 66, ln(2)),
(299, 56, 67, 0),
(300, 56, 68, 0),
(301, 57, 56, 0),
(302, 57, 57, 0),
(303, 57, 58, 0),
(304, 57, 59, 0),
(305, 57, 60, 0),
(306, 57, 61, 0),
(307, 57, 62, 0),
(308, 57, 63, 0),
(309, 57, 64, 0),
(310, 57, 65, 0),
(311, 57, 66, 0),
(312, 57, 67, 0),
(313, 57, 68, 0),
(314, 58, 58, 0),
(315, 58, 59, 0),
(316, 58, 62, 0),
(317, 58, 63, ln(3)),
(318, 58, 64, ln(3)),
(319, 58, 65, ln(3)),
(320, 58, 66, 0),
(321, 58, 67, 0),
(322, 58, 68, 0),
(323, 59, 56, ln(1/4)),
(324, 59, 57, ln(1/4)),
(325, 59, 58, 0),
(326, 59, 59, 0),
(327, 59, 60, 0),
(328, 59, 61, 0),
(329, 59, 62, 0),
(330, 59, 63, 0),
(331, 59, 64, ln(2)),
(332, 59, 65, ln(2)),
(333, 59, 66, 0),
(334, 59, 67, 0),
(335, 59, 68, 0),
(336, 60, 58, 0),
(337, 60, 59, 0),
(338, 60, 62, 0),
(339, 60, 63, ln(3)),
(340, 60, 64, ln(3)),
(341, 60, 65, ln(3)),
(342, 60, 66, 0),
(343, 60, 67, 0),
(344, 60, 68, 0),
(345, 61, 56, ln(1/5)),
(346, 61, 57, ln(1/5)),
(347, 61, 58, 0),
(348, 61, 59, 0),
(349, 61, 60, 0),
(350, 61, 61, 0),
(351, 61, 62, 0),
(352, 61, 63, 0),
(353, 61, 64, ln(5)),
(354, 61, 65, ln(5)),
(355, 61, 66, 0),
(356, 61, 67, ln(1/5)),
(357, 61, 68, 0),
(358, 62, 58, 0),
(360, 62, 62, ln(1/5)),
(361, 62, 63, ln(10)),
(362, 62, 64, ln(10)),
(363, 62, 65, ln(10)),
(364, 62, 66, 0),
(365, 62, 68, ln(1/5)),
(366, 63, 56, ln(1/5)),
(367, 63, 57, ln(1/5)),
(368, 63, 58, 0),
(369, 63, 59, 0),
(370, 63, 60, 0),
(371, 63, 61, 0),
(372, 63, 62, 0),
(373, 63, 63, 0),
(374, 63, 64, ln(5)),
(375, 63, 65, ln(5)),
(376, 63, 66, 0),
(377, 63, 67, ln(1/5)),
(378, 63, 68, 0),
(379, 64, 58, 0),
(380, 64, 62, ln(1/5)),
(381, 64, 63, ln(10)),
(382, 64, 64, ln(10)),
(383, 64, 65, ln(10)),
(384, 64, 66, 0),
(385, 64, 68, ln(1/5)),
(386,65,97, ln(2)),
(387, 65, 98, ln(1.5)),
(388, 65, 99, ln(3.5)),
(389, 65, 100, ln(2)),
(390, 65, 101, ln(1)),
(391, 66, 97, ln(1)),
(392, 66, 99, ln(7)),
(393, 66, 100, ln(1)),
(394, 66, 101, ln(1)),
(395,67,102,0.346),
(396,67,103,-0.984),
(397,67, 104,-1.623),
(398, 67, 105, -1.272),
(399, 67, 106,0),
(400, 67, 107, -1.359),
(401, 67, 108, -1.514),
(402, 67, 109, -0.917),
(403,68,102,0.346),
(404,68,103,-0.984),
(405,68, 104,-1.623),
(406, 68, 105, -1.272),
(407, 68, 106,0),
(408, 68, 107, -1.359),
(409, 68, 108, -1.514),
(410, 68, 109, -0.917),
(411, 69, 56,1.32919708837912),
(412,69, 57, 1.32919708837912),
(413, 69, 58, 0),
(414, 69, 59, 0),
(415, 69, 60, -0.638951559682027),
(416, 69, 61, -0.638951559682027),
(417, 69, 62, -0.287414328319374),
(418, 69, 63, -0.287414328319374),
(419, 69, 64, 0.983512450373643),
(420, 69, 65, 0.304142),
(421, 69, 66, -0.45242),
(422, 69, 67, -0.529605980470081),
(423, 69, 68, 0.0661261496901139),
(424,70,102,1.32919708837912),
(425,70,103,0),
(426,70, 104,-0.638951559682027),
(427, 70, 105, -0.287414328319374),
(428, 70, 106,0.983512450373643),
(429, 70, 107, -0.375232378509983),
(430, 70, 108, -0.529605980470081),
(431, 70, 109, 0.0661261496901139),
(432,71,102,1.32919708837912),
(433,71,103,0),
(434,71, 104,-0.638951559682027),
(435, 71, 105, -0.287414328319374),
(436, 71, 106,0.983512450373643),
(437, 71, 108, -0.529605980470081),
(438, 71, 109, 0.0661261496901139),
(439, 71, 107, -0.375232378509983),
(440, 72, 69, -0.8230),
(441, 72, 70, -0.7436),
(442, 72, 71, -0.5746),
(443, 72, 72, -0.3181),
(444, 72, 73, 0.1529),
(445, 72, 74, 0.1897),
(446, 72, 75,0.7656),
(447, 72, 76, 0.9941),
(448, 72, 77, 0.4561),
(449, 72, 78, 0.9091),
(450, 72, 79, 0.1340),
(451, 72, 80, -0.2514),
(452, 72, 81, -1.2908),
(453, 72, 82, -0.3500),
(454, 72, 83,-0.6213),
(455, 72, 84,-0.3435),
(456, 72, 85, -0.5251),
(457, 72, 86,-0.1118),
(458, 72, 87, -0.5093),
(459, 72, 88, 0.2316),
(460, 72, 89, -0.2854),
(461, 72, 90, -0.3950),
(462, 72, 91, 0.0000),
(463, 72, 92,0.6395),
(464, 72, 93, -1.1516),
(465, 72, 94, 0.3912),
(466, 72, 95, -1.1656),
(467, 72, 96, 2.8618),
(468, 73, 69, -0.8230),
(469, 73, 70, -0.7436),
(470, 73, 71, -0.5746),
(471, 73, 72, -0.3181),
(473, 73, 73, 0.1529),
(474, 73, 74, 0.1897),
(475, 73, 75,0.7656),
(476, 73, 76, 0.9941),
(477, 73, 77, 0.4561),
(478, 73, 78, 0.9091),
(479, 73, 79, 0.1340),
(480, 73, 80, -0.2514),
(481, 73, 81, -1.2908),
(482, 73, 82, -0.3500),
(483, 73, 83,-0.6213),
(484, 73, 84,-0.3435),
(485, 73, 85, -0.5251),
(486, 73, 86,-0.1118),
(487, 73, 87, -0.5093),
(488, 73, 88, 0.2316),
(489, 73, 89, -0.2854),
(490, 73, 90, -0.3950),
(491, 73, 91, 0.0000),
(492, 73, 92,0.6395),
(493, 73, 93, -1.1516),
(494, 73, 94, 0.3912),
(495, 73, 95, -1.1656),
(496, 73, 96, 2.8618),
(497, 74, 69, -0.8230),
(498, 74, 70, -0.7436),
(499, 74, 71, -0.5746),
(500, 74, 72, -0.3181),
(501, 74, 73, 0.1529),
(502, 74, 74, 0.1897),
(503, 74, 75,0.7656),
(504, 74, 76, 0.9941),
(505, 74, 77, 0.4561),
(506, 74, 78, 0.9091),
(507, 74, 79, 0.1340),
(508, 74, 80, -0.2514),
(509, 74, 81, -1.2908),
(510, 74, 82, -0.3500),
(511, 74, 83,-0.6213),
(512, 74, 84,-0.3435),
(513, 74, 85, -0.5251),
(514, 74, 86,-0.1118),
(515, 74, 87, -0.5093),
(516, 74, 88, 0.2316),
(517, 74, 89, -0.2854),
(518, 74, 90, -0.3950),
(519, 74, 91, 0.0000),
(520, 74, 92,0.6395),
(521, 74, 93, -1.1516),
(522, 74, 94, 0.3912),
(523, 74, 95, -1.1656),
(524, 74, 96, 2.8618),
(525,75,102,0.346),
(526,75,103,-0.984),
(527,75, 104,-1.623),
(528, 75, 105, -1.272),
(529, 75, 106,0),
(530, 75, 107, -1.359),
(531, 75, 108, -1.514),
(532, 75, 109, -0.917),
(533,76,102,0.346),
(534,76,103,-0.984),
(535,76, 104,-1.623),
(536, 76, 105, -1.272),
(537, 76, 106,0),
(538, 76, 107, -1.359),
(539, 76, 108, -1.514),
(540, 76, 109, -0.917),
(541, 77, 56, 0),
(542, 77, 57, 0),
(543,77,58,0),
(544,77,59,0),
(545,77,60,0),
(546,77,61,0),
(547,77,62,0),
(548,77,63,0),
(549,77,64,ln(3)),
(550,77,65,ln(3)),
(551,77,66,ln(3)),
(552,77,67,0),
(553,77,68,0),
(554,78,56,ln(0.5)),
(555,78,63,ln(0.5)),
(556,78,64,ln(6)),
(557,78,65,ln(6)),
(558,78,66,ln(6)),
(559,78,67,ln(0.5)),
(560,78,68,0),
(561, 79, 56, 0),
(562, 79, 57, 0),
(563,79,58,0),
(564,79,59,0),
(565,79,60,0),
(566,79,61,0),
(567,79,62,0),
(568,79,63,0),
(569,79,64,ln(3)),
(570,79,65,ln(3)),
(571,79,66,ln(3)),
(572,79,67,0),
(573,79,68,0),
(574,80,56,ln(0.5)),
(575,80,63,ln(0.5)),
(576,80,64,ln(6)),
(577,80,65,ln(6)),
(578,80,66,ln(6)),
(579,80,67,ln(0.5)),
(580,80,68,0),
(581, 81, 56, 0),
(582, 81, 57, 0),
(583,81,58,0),
(584,81,59,0),
(585,81,60,0),
(586,81,61,0),
(587,81,62,ln(3)),
(588,81,63,ln(3)),
(589,81,64,ln(3)),
(590,81,65,ln(3)),
(591,81,66,0),
(592,81,67,0),
(593,81,68,0),
(594, 82,56,ln(3)),
(595,82,59,ln(3)),
(596,82,62,ln(3)),
(597,82,63,ln(3)),
(598,82,64,ln(3)),
(599,82,65,ln(3)),
(600,83,63,ln(6)),
(601,83,64,ln(6)),
(602,83,68,0),
(603,82,68,0),
(604, 84, 56,1.32919708837912),
(605,84, 57, 1.32919708837912),
(606, 84, 58, 0),
(607, 84, 59, 0),
(608, 84, 60, -0.638951559682027),
(609, 84, 61, -0.638951559682027),
(610, 84, 62, -0.287414328319374),
(611, 84, 63, -0.287414328319374),
(612, 84, 64, 0.983512450373643),
(613, 84, 65, 0.304142),
(614, 84, 66, -0.45242),
(615, 84, 67, -0.529605980470081),
(616, 84, 68, 0.0661261496901139);


INSERT IGNORE INTO simlab.demand_segment_weighting 
(dsw_id, dsw_name, dsw_segment_set) VALUES
(1, "basic paper independent demand", 2),
(2, "basic paper dependent demand", 3),
(3, "basic paper dependent demand two alt", 4),
(4, "Dependent demand three alt 4 segments", 5),
(5, "Dependent demand 6alt 4 segments",6),
(6, "Dependent demand 3alt 4seg 9DA",7),
(7, "Dependent demand 3alt 4seg 9DA-homogeneous",7),
(8, "Dependent demand 3alt 4seg 9DA-heterogeneous",7),
(9, "Dependent demand 3alt 4seg 9DA-moreSocial",7),
(10, "Dependent demand 3alt 4seg 9DA-more hetero less var",8),
(11, "Basic ORS 6TW",9),
(12, "ORS 3TW runtime",10),
(13, "ORS 4TW runtime",11),
(14, "Orienteering GRILS - all even", 12),
(15, "Orienteering GRILS - clustered location, even alt pop", 13),
(16, "Orienteering GRILS - even locations, uneven alt pop", 14),
(17, "Orienteering GRILS - clustered location, uneven alt pop", 15),
(18, "Yang/Strauss, only one segment", 16),
(19, "6alt 2 segments", 17),
(20, "12alt 2 segments", 18),
(21, "12 alt 2 segments", 19),
(22, "12alt 2segments", 20),
(23, "12alt 2segments", 21),
(24, "12alt 2segments", 22),
(25, "4alt 2 segments", 23),
(26, "7 alt 2h AYN", 24),
(27, "7 alt 2h AYN smaller region", 25),
(28, "12 alt 1h AYN smaller region", 26),
(29, "7 alt 2h AYN smaller region two segments", 27),
(30, "27 alt munich 16 areas", 28),
(31, "27 alt munich 36 areas", 29),
(32, "27 alt munich 64 areas", 30),
(33, "7 alt 2h AYN smaller region-36 areas", 31),
(34, "7 alt 2h AYN smaller region-64 areas", 32),
(35, "12+1alt 1h 1 cluster", 33),
(36, "12+1alt 1h 2 cluster",34),
(37, "12+1alt 1h 3 segments theoretical 15x15", 35),
(38, "12 alt 1h AYN smaller region-36 areas", 36),
(39, "Theo 12 tws, 2 seg, low/high, flexible/inflexible, both uniform, small region- 0.75/0.25",37),
(40, "Theo 12 tws, 2 seg, low/high, flexible/inflexible, 2 cluster/4 cluster, small region- 0.75/0.25", 38),
(41, "Theo 6 tws, 2 seg, low/high, flexible/inflexible, both uniform, small region- 0.75/0.25",39),
(42, "Theo 6 tws, 2 seg, low/high, flexible/inflexible, 2 cluster/4 cluster, small region- 0.75/0.25", 40),
(43, "Theo 12 tws, 2 seg, low/high, flexible/inflexible, 2 cluster/4 cluster, small region- 0.5/0.5", 38),
(44, "Theo 6 tws, 2 seg, low/high, flexible/inflexible, 2 cluster/4 cluster, small region- 0.5/0.5", 40),
(45, "Theo 12 tws, 2 seg, low/low, flexible/inflexible, 2 cluster/2 other cluster, small region- 0.75/0.25", 41),
(46, "Theo 6 tws, 2 seg, low/low, flexible/inflexible, 2 cluster/2 other cluster, small region- 0.75/0.25", 42),
(47, "Theo 12 tws, 2 seg, low/high, flexible/inflexible, both uniform, large region- 0.75/0.25",43),
(48, "Theo 12 tws, 2 seg, low/high, flexible/inflexible, 2 cluster/4 cluster, large region- 0.75/0.25", 44),
(49, "Theo 12 tws, 2 seg, low/low, flexible/inflexible, 2 cluster/2 other cluster, large region- 0.75/0.25", 45),
(50, "Theo 6 tws, 2 seg, low/high, flexible/inflexible, both uniform, large region- 0.75/0.25",46),
(51, "Theo 6 tws, 2 seg, low/high, flexible/inflexible, 2 cluster/4 cluster, large region- 0.75/0.25", 47),
(52, "Theo 6 tws, 2 seg, low/low, flexible/inflexible, 2 cluster/2 other cluster, large region- 0.75/0.25", 48),
(53, "Theo 11 overlap, 2 seg, low/high, flexible/inflexible, both uniform, small region- 0.75/0.25",49),
(54, "Theo 11 overlap, 2 seg, low/high, flexible/inflexible, both uniform, large region- 0.75/0.25",50),
(55, "Theo 11 overlap, 2 seg, low/high, flexible/inflexible, 2 cluster/4 cluster, small region- 0.75/0.25", 51),
(56, "Theo 11 overlap, 2 seg, low/high, flexible/inflexible, 2 cluster/4 cluster, large region- 0.75/0.25", 52),
(57, "Theo 11 overlap, 2 seg, low/low, flexible/inflexible, 2 cluster/2 other cluster, small region- 0.75/0.25", 53),
(58, "Theo 11 overlap, 2 seg, low/low, flexible/inflexible, 2 cluster/2 other cluster, large region- 0.75/0.25", 54),
(59, "Theo 12, 2 seg, low/high, flexible/inflexible, uniform/2cluster, small region - 0.75/0.25", 55),
(60, "Theo 12, 2 seg, low/high, flexible/inflexible, uniform/2cluster, large region - 0.75/0.25", 56),
(61, "Theo 6, 2 seg, low/high, flexible/inflexible, uniform/2cluster, small region - 0.75/0.25", 57),
(62, "Theo 6, 2 seg, low/high, flexible/inflexible, uniform/2cluster, large region - 0.75/0.25", 58),
(63, "Theo 11 overlap, 2 seg, low/high, flexible/inflexible, uniform/2cluster, small region - 0.75/0.25", 59),
(64, "Theo 11 overlap, 2 seg, low/high, flexible/inflexible, uniform/2cluster, large region - 0.75/0.25", 60),
(65, "Theo 6 tws, 2 seg, low/high, flexible/inflexible, 2 cluster/4 cluster, largest region- 0.75/0.25", 61),
(66, "Theo 6 tws, 2 seg, low/high, flexible/inflexible, uniform/2 cluster, largest region- 0.75/0.25", 62);


INSERT IGNORE INTO simlab.demand_segment_weight 
(dw_id, dw_set,dw_demand_segment,dw_weight) VALUES
(1, 1, 3,0.70),
(2, 1,4,0.20),
(3, 1,5,0.10),
(4, 2, 6,0.70),
(5, 2,7,0.20),
(6, 2,8,0.10),
(7, 3, 9,0.70),
(8, 3,10,0.20),
(9, 3,11,0.10),
(10, 4,12,0.40),
(11, 4,13,0.40),
(12, 4,14,0.10),
(13, 5,15,0.4),
(14, 5,16,0.1),
(15, 5,17,0.4),
(16, 5,18,0.1),
(17, 4,19,0.10),
(18, 6,20,0.4),
(19, 6,21,0.1),
(20, 6,22,0.4),
(21, 6,23,0.1),
(22, 7,20,0.3),
(23, 7,21,0.1),
(24, 7,22,0.3),
(25, 7,23,0.3),
(26, 8,20,0.6),
(27, 8,21,0.1),
(28, 8,22,0.2),
(29, 8,23,0.1),
(30, 9,20,0.1),
(31, 9,21,0.4),
(32, 9,22,0.4),
(33, 9,23,0.1),
(34, 10,24,0.6),
(35, 10,25,0.1),
(36, 10,26,0.2),
(37, 10,27,0.1),
(38, 11,28,0.4),
(39, 11,29,0.1),
(40, 11,30,0.4),
(41, 11,31,0.1),
(42, 12,32,0.4),
(43, 12,33,0.1),
(44, 12,34,0.4),
(45, 12,35,0.1),
(46, 13,36,0.4),
(47, 13,37,0.1),
(48, 13,38,0.4),
(49, 13,39,0.1),
(50, 14, 40, 0.5),
(51, 14, 41, 0.4),
(52, 14, 42, 0.1),
(53, 15, 43, 0.5),
(54, 15, 44, 0.4),
(55, 15, 45, 0.1),
(56, 16, 46, 0.5),
(57, 16, 47, 0.4),
(58, 16, 48, 0.1),
(59, 17, 49, 0.5),
(60, 17, 50, 0.4),
(61, 17, 51, 0.1),
(62, 18, 52, 1),
(63, 19, 53, 0.7),
(64,19,54,0.3),
(65, 20,55,0.7),
(66,20,56,0.3),
(67,21,57,0.7),
(68,21,58,0.3),
(69,22,59,0.7),
(70,22,60,0.3),
(71,23,61,0.7),
(72,23,62,0.3),
(73,24,63,0.7),
(74,24,64,0.3),
(75,25,65, 0.7),
(76,25,66, 0.3),
(77, 26, 67, 1.0),
(78, 27, 68, 1.0),
(79, 28, 69, 1.0),
(80, 29, 70, 0.5),
(81, 29, 71, 0.5),
(82, 30, 72, 1.0),
(83, 31, 73, 1.0),
(84, 32, 74, 1.0),
(85, 33, 75, 1.0),
(86, 34, 76, 1.0),
(87,35,77,0.7),
(88,35,78,0.3),
(89,36,79,0.8),
(90,36, 80, 0.2),
(91,37,81,0.6),
(92,37,82,0.3),
(93,37,83,0.1),
(94,38, 84, 1.0),
(95, 39, 85, 0.75),
(96, 39, 86, 0.25),
(97, 40, 87, 0.75),
(98, 40, 88, 0.25),
(99, 41, 89, 0.75),
(100, 41, 90, 0.25),
(101, 42, 91, 0.75),
(102, 42, 92, 0.25),
(103, 43, 87, 0.5),
(104, 43, 88, 0.5),
(105, 44, 91, 0.5),
(106, 44, 92, 0.5),
(107, 45, 93, 0.75),
(108, 45, 94,0.25),
(109, 46, 95,0.75),
(110, 46, 96,0.25),
(111,47,97,0.75),
(112,47,98,0.25),
(113,48,99,0.75),
(114,48,100,0.25),
(115,49,101,0.75),
(116,49,102,0.25),
(117,50,103,0.75),
(118,50,104,0.25),
(119,51,105,0.75),
(120,51,106,0.25),
(121,52,107,0.75),
(122,52,108,0.25),
(123,53,109,0.75),
(124,53,110,0.25),
(125,54,111,0.75),
(126,54,112,0.25),
(127,55,113,0.75),
(128,55,114,0.25),
(129,56,115,0.75),
(130,56,116,0.25),
(131,57,117,0.75),
(132,57,118,0.25),
(133,58,119,0.75),
(134,58,120,0.25),
(135, 59, 121, 0.75),
(136, 59, 122, 0.25),
(137, 60, 123, 0.75),
(138, 60, 124, 0.25),
(139, 61, 125, 0.75),
(140, 61, 126, 0.25),
(141, 62, 127, 0.75),
(142, 62, 128, 0.25),
(143, 63, 129, 0.75),
(144, 63, 130, 0.25),
(145, 64, 131, 0.75),
(146, 64, 132, 0.25),
(147, 65, 133, 0.75),
(148, 65, 134, 0.25),
(149, 66, 135, 0.75),
(150, 66, 136, 0.25);



INSERT IGNORE INTO simlab.vehicle_type
(veh_id, veh_capacity_volume,veh_capacity_no,veh_cooling,veh_freezer) VALUES
(1, 50.0, 50, 1,1),
(2, 100, 100, 0,0);

INSERT IGNORE INTO simlab.routing
(rou_id, rou_possibly_final) VALUES
(1, 0);

INSERT IGNORE INTO simlab.route
(route_id, route_routing) VALUES
(1, 1);

INSERT IGNORE INTO simlab.route_element
(re_id, re_route, re_tw) VALUES
(1, 1, 1);

INSERT IGNORE INTO simlab.service_time_segment_set
(sss_id, sss_name) VALUES
(1, "Three segments with normal distributions");

INSERT IGNORE INTO simlab.service_time_segment
(sse_id, sse_set, sse_pd) VALUES
(1, 1, 9),
(2, 1,10),
(3, 1,11);

INSERT IGNORE INTO simlab.service_time_segment_weighting
(sws_id, sws_name, sws_segment_set) VALUES
(1, "Same weighting", 1);

INSERT IGNORE INTO simlab.service_time_segment_weight
(ssw_id, ssw_set, ssw_service_segment, ssw_weight) VALUES
(1, 1,1,0.33),(2, 1,2,0.33),(3, 1,3,0.34);


INSERT IGNORE INTO simlab.arrival_process 
(arr_id, arr_name,arr_lambda_factor) VALUES
(1, "Poisson process with constant intensity of 0.3",0.3),
(2, "Poisson process with constant intensity of 0.6",0.6),
(3, "Poisson process with constant intensity of 0.4",0.4),
(4, "Poisson process with constant intensity of 0.35",0.35),
(5, "Poisson process with constant intensity of 0.8",0.8),
(6, "Poisson process with constant intensity of 0.5",0.5),
(7, "Poisson process with constant intensity of 0.2",0.2),
(8, "Poisson process with constant intensity of 0.25",0.25),
(9, "Poisson process with constant intensity of 0.225",0.225),
(10, "Poisson process with constant intensity of 0.375",0.375),
(11, "Poisson process with constant intensity of 0.3375",0.3375),
(12, "Poisson process with constant intensity of 0.3",0.3),
(13, "Poisson process with constant intensity of 0.27",0.27),
(14, "Poisson process with constant intensity of 0.45",0.45),
(15, "Poisson process with constant intensity of 0.405",0.405),
(16, "Poisson process with constant intensity of 0.385",0.385),
(17, "Poisson process with constant intensity of 0.315",0.315),
(18, "Poisson process with constant intensity of 0.55",0.55);

INSERT IGNORE INTO simlab.experiment
(exp_id, exp_booking_period_no) VALUES
(1, 1);

INSERT IGNORE INTO simlab.r_experiment_v_alternative_set
(exp_as_exp,exp_as_as,exp_as_period) VALUES
(1,1,0);

INSERT IGNORE INTO simlab.r_experiment_v_capacity_set
(exp_cas_exp,exp_cas_cas,exp_cas_period) VALUES
(1,1,0);

INSERT IGNORE INTO simlab.value_function_approximation_type
(vft_id, vft_name) VALUES
(1, "Linear model");

INSERT IGNORE INTO simlab.vehicle_area_assignment_set
(vrs_id, vrs_name, vrs_delivery_area_set) VALUES
(1, "Test for subset Yang/Strauss ADP", 4),
(2, "3 veh. for Berlin avg. 12 min", 6),
(3, "2 veh. for Berlin avg. 12 min", 6),
(4, "3 veh. for Berlin avg. 12 min", 8),
(5, "2 veh. for Berlin avg. 12 min", 8),
(6, "2 veh. for Berlin avg. 12 min", 10),
(7, "2 veh. for Berlin avg. 12 min", 12),
(8, "16 veh. for Berlin avg. 12 min", 12),
(9, "2 veh. for Berlin 20x20min", 14),
(10, "2 veh. for Berlin 20x20min, 100A", 16),
(11, "3 veh. for Berlin 20x20min", 14),
(12, "3 veh. for Berlin 20x20min, 100A", 16);

INSERT IGNORE INTO simlab.vehicle_area_assignment_set
(vrs_id, vrs_name, vrs_delivery_area_set) VALUES
(13, "2 veh. for Berlin 20x20min, 16A", 18),
(14, "2 veh. for Berlin 20x20min, 9A", 20),
(15, "2 veh. for munich AYN, 100A", 21),
(16, "5 veh. for munich AYN, 100A", 21),
(17, "10 veh. for munich AYN, 100A", 21),
(18, "3 veh. for munich AYN, 100A", 21),
(19, "4 veh. for munich AYN, 100A", 21),
(20, "3 veh. for munich AYN, 16A", 23),
(21, "4 veh. for munich AYN, 16A", 23),
(22, "2 veh. for munich AYN, 16A", 23),
(23, "4 veh. for munich AYN, 36A", 25),
(24, "8 veh. for munich AYN, 64A", 27),
(25, "4 veh. for Berlin 20x20min, 16A", 18),
(26, "8 veh. for munich AYN large, 36A", 29),
(27,"4 veh. for munich AYN medium, 25A", 31),
(28, "2 veh. for Theoretical 15x15m-25", 33),
(29, "2 veh. for munich AYN, 36A", 25),
(30, "2 veh. for Theo 10x10km, 36A", 35),
(31, "3 veh. for Theo 10x10km, 36A", 35),
(32, "2 veh. for Theo 15x15km, 36A", 37),
(33, "3 veh. for Theo 15x15km, 36A", 37),
(34, "2 veh. for Theo 15x15km, 64A", 39),
(35, "3 veh. for Theo 15x15km, 64A", 39),
(36, "2 veh. for Theo 10x10km, depot right, 36A", 35),
(37, "3 veh. for Theo 10x10km, depot right, 36A", 35),
(38, "2 veh. for Theo 15x15km, depot right, 36A", 37),
(39, "3 veh. for Theo 15x15km, depot right, 36A", 37),
(40, "2 veh. for Theo 15x15km, depot right, 64A", 39),
(41, "3 veh. for Theo 15x15km, depot right, 64A", 39),
(42, "4 veh. for Munich AYN, depot left, 36A", 25),
(43, "3 veh. for Munich AYN, depot left, 36A", 25),
(44, "10 veh. for Theo 25x25km, depot right, 100A",41),
(45, "6 veh. for Theo 15x15km, depot right, 36A",37);

INSERT IGNORE INTO simlab.vehicle_area_assignment
(vaa_id,vaa_set,vaa_vehicle_no,vaa_area,vaa_vehicle_type,vaa_starting_location_lat,vaa_starting_location_lon,vaa_ending_location_lat,vaa_ending_location_lon,vaa_start_time,vaa_end_time) 
VALUES
(1, 1, 1, 22, 1, 52.525000,13.425000, 52.525000,13.425000,  15, 21),
(2, 1, 2, 22, 1, 52.525000,13.425000, 52.525000,13.425000,  15, 21),
(3, 1, 3, 22, 1, 52.525000,13.425000, 52.525000,13.425000,  15, 21),
(4, 2, 1, 32, 1, 52.515000, 13.395000, 52.515000, 13.395000,  10, 22),
(5, 2, 2, 32, 1, 52.515000, 13.395000, 52.515000, 13.3950000,  10, 22),
(6, 2, 3, 32, 1, 52.515000, 13.395000, 52.515000, 13.395000,  10, 22),
(7, 3, 1, 32, 1, 52.515000, 13.395000, 52.515000, 13.395000,  10, 22),
(8, 3, 2, 32, 1, 52.515000, 13.395000, 52.515000, 13.395000,  10, 22),
(9, 4, 1, 33, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(10, 4, 2, 33, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(11, 4, 3, 33, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(12, 5, 1, 33, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(13, 5, 2, 33, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(14, 6, 1, 34, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(15, 6, 2, 34, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(16, 7, 1, 35, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(17, 7, 2, 35, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(18, 8, 1, 35, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(19, 8, 2, 35, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(20, 8, 3, 35, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(21, 8, 4, 35, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(22, 8, 5, 35, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(23, 8, 6, 35, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(24, 8, 7, 35, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(25, 8, 8, 35, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(26, 8, 9, 35, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(27, 8, 10, 35, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(28, 8, 11, 35, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(29, 8, 12, 35, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(30, 8, 13, 35, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(31, 8, 14, 35, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(32, 8, 15, 35, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(33, 8, 16, 35, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(34, 9, 1, 36, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(35, 9, 2, 36, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(36, 10, 1, 36, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(37, 10, 2, 36, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(38, 11, 1, 36, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(39, 11, 2, 36, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(40, 11, 3, 36, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(41, 12, 1, 37, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(42, 12, 2, 37, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(43, 12, 3, 37, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22);


INSERT IGNORE INTO simlab.vehicle_area_assignment
(vaa_id,vaa_set,vaa_vehicle_no,vaa_area,vaa_vehicle_type,vaa_starting_location_lat,vaa_starting_location_lon,vaa_ending_location_lat,vaa_ending_location_lon,vaa_start_time,vaa_end_time) 
VALUES
(44, 13, 1, 38, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(45, 13, 2, 38, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(46, 14, 1, 39, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(47, 14, 2, 39, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(48, 15, 1, 40, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(49, 15, 2, 40, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(50, 16, 1, 40, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(51, 16, 2, 40, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(52, 16, 3, 40, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(53, 16, 4, 40, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(54, 16, 5, 40, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(55, 17, 1, 40, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(56, 17, 2, 40, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(57, 17, 3, 40, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(58, 17, 4, 40, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(59, 17, 5, 40, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(60, 17, 6, 40, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(61, 17, 7, 40, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(62, 17, 8, 40, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(63, 17, 9, 40, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(64, 17, 10, 40, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(65, 18, 1, 40, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(66, 18, 2, 40, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(67, 18, 3, 40, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(68, 19, 1, 40, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(69, 19, 2, 40, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(70, 19, 3, 40, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(71, 19, 4, 40, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(72, 20, 1, 41, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(73, 20, 2, 41, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(74, 20, 3, 41, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(75, 21, 1, 41, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(76, 21, 2, 41, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(77, 21, 3, 41, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(78, 21, 4, 41, 1, 48.1555, 11.5410, 48.1555, 11.5410, 10,22),
(79, 22, 1, 41, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(80, 22, 2, 41, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(81, 23, 1, 10000, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(82, 23, 2, 10000, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(83, 23, 3, 10000, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(84, 23, 4, 10000, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(85, 24, 1, 10001, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(86, 24, 2, 10001, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(87, 24, 3, 10001, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(88, 24, 4, 10001, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(89, 24, 5, 10001, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(90, 24, 6, 10001, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(91, 24, 7, 10001, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(92, 24, 8, 10001, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(93, 25, 1, 38, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(94, 25, 2, 38, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(95, 25, 3, 38, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(96, 25, 4, 38, 1, 52.515000, 13.395000, 52.515000, 13.395000, 10,22),
(97, 26, 1, 10002, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(98, 26, 2, 10002, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(99, 26, 3, 10002, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(100, 26, 4, 10002, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(101, 26, 5, 10002, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(102, 26, 6, 10002, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(103, 26, 7, 10002, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(104, 26, 8, 10002, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(105, 27, 1, 10003, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(106, 27, 2, 10003, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(107, 27, 3, 10003, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(108, 27, 4, 10003, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(109, 28, 1, 10004,1,0.027, 0.027,0.027, 0.027,10,22),
(110, 28, 2, 10004,1,0.027, 0.027,0.027, 0.027,10,22),
(111, 29, 1, 10000, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(112, 29, 2, 10000, 1, 48.1555, 11.5410, 48.1555, 11.5410, 8,22),
(113, 30, 1, 10005,1,0.04497, 0.04497, 0.04497, 0.04497,  10, 22),
(114, 30, 2, 10005,1,0.04497, 0.04497, 0.04497, 0.04497,  10, 22),
(115, 31, 1, 10005,1,0.04497, 0.04497, 0.04497, 0.04497,  10, 22),
(116, 31, 2, 10005,1,0.04497, 0.04497, 0.04497, 0.04497,  10, 22),
(117, 31, 3, 10005,1,0.04497, 0.04497, 0.04497, 0.04497,  10, 22),
(118, 32, 1, 10006,1,0.06745,0.06745, 0.06745,0.06745,  10, 22),
(119, 32, 2, 10006,1,0.06745,0.06745, 0.06745,0.06745,10, 22),
(120, 33, 1, 10006,1,0.06745,0.06745, 0.06745,0.06745,  10, 22),
(121, 33, 2, 10006,1,0.06745,0.06745, 0.06745,0.06745, 10, 22),
(122, 33, 3, 10006,1,0.06745,0.06745, 0.06745,0.06745, 10, 22),
(123, 34, 1, 10007,1,0.06745,0.06745, 0.06745,0.06745, 10, 22),
(124, 34, 2, 10007,1,0.06745,0.06745, 0.06745,0.06745,  10, 22),
(125, 35, 1, 10007,1,0.06745,0.06745, 0.06745,0.06745,  10, 22),
(126, 35, 2, 10007,1,0.06745,0.06745, 0.06745,0.06745, 10, 22),
(127, 35, 3, 10007,1,0.06745,0.06745, 0.06745,0.06745,  10, 22),
(128, 36, 1, 10005,1,0.05996,0.05996,0.05996,0.05996,  10, 22),
(129, 36, 2, 10005,1,0.05996,0.05996,0.05996,0.05996,  10, 22),
(130, 37, 1, 10005,1,0.05996,0.05996,0.05996,0.05996,  10, 22),
(131, 37, 2, 10005,1,0.05996,0.05996,0.05996,0.05996,  10, 22),
(132, 37, 3, 10005,1,0.05996,0.05996,0.05996,0.05996,  10, 22),
(133, 38, 1, 10006,1,0.089933, 0.089933,0.089933, 0.089933,  10, 22),
(134, 38, 2, 10006,1,0.089933, 0.089933,0.089933, 0.089933,10, 22),
(135, 39, 1, 10006,1,0.089933, 0.089933,0.089933, 0.089933,  10, 22),
(136, 39, 2, 10006,1,0.089933, 0.089933,0.089933, 0.089933, 10, 22),
(137, 39, 3, 10006,1,0.089933, 0.089933,0.089933, 0.089933, 10, 22),
(138, 40, 1, 10007,1,0.089933, 0.089933,0.089933, 0.089933, 10, 22),
(139, 40, 2, 10007,1,0.089933, 0.089933,0.089933, 0.089933,  10, 22),
(140, 41, 1, 10007,1,0.089933, 0.089933,0.089933, 0.089933,  10, 22),
(141, 41, 2, 10007,1,0.089933, 0.089933,0.089933, 0.089933, 10, 22),
(142, 41, 3, 10007,1,0.089933, 0.089933,0.089933, 0.089933,  10, 22),
(143, 42, 1, 10000, 1, 48.1173,11.467,48.1173,11.467, 8,22),
(144, 42, 2, 10000, 1, 48.1173,11.467,48.1173,11.467, 8,22),
(145, 42, 3, 10000, 1, 48.1173,11.467,48.1173,11.467, 8,22),
(146, 42, 4, 10000, 1, 48.1173,11.467,48.1173,11.467, 8,22),
(147, 43, 1, 10000, 1, 48.1173,11.467,48.1173,11.467, 8,22),
(148, 43, 2, 10000, 1, 48.1173,11.467,48.1173,11.467, 8,22),
(149, 43, 3, 10000, 1, 48.1173,11.467,48.1173,11.467, 8,22);

INSERT IGNORE INTO simlab.vehicle_area_assignment
(vaa_id,vaa_set,vaa_vehicle_no,vaa_area,vaa_vehicle_type,vaa_starting_location_lat,vaa_starting_location_lon,vaa_ending_location_lat,vaa_ending_location_lon,vaa_start_time,vaa_end_time) 
VALUES
(150, 44, 1, 10008,1,0.1499, 0.1499,0.1499, 0.1499 ,10,22),
(151, 44, 2, 10008,1,0.1499, 0.1499,0.1499, 0.1499 ,10,22),
(152, 44, 3, 10008,1,0.1499, 0.1499,0.1499, 0.1499,10,22),
(153, 44, 4, 10008,1,0.1499, 0.1499,0.1499, 0.1499 ,10,22),
(154, 44, 5, 10008,1,0.1499, 0.1499,0.1499, 0.1499 ,10,22),
(155, 44, 6, 10008,1,0.1499, 0.1499,0.1499, 0.1499 ,10,22),
(156, 44, 7, 10008,1,0.1499, 0.1499,0.1499, 0.1499,10,22),
(157, 44, 8, 10008,1,0.1499, 0.1499,0.1499, 0.1499,10,22),
(158, 44, 9, 10008,1,0.1499, 0.1499,0.1499, 0.1499,10,22),
(159, 44, 10,10008,1,0.1499, 0.1499,0.1499, 0.1499,10,22),
(160, 45, 1, 10006,1, 0.089933, 0.089933,0.089933, 0.089933, 10, 22),
(161, 45, 2, 10006,1, 0.089933, 0.089933,0.089933, 0.089933, 10, 22),
(162, 45, 3, 10006,1, 0.089933, 0.089933,0.089933, 0.089933, 10, 22),
(163, 45, 4, 10006,1, 0.089933, 0.089933,0.089933, 0.089933, 10, 22),
(164, 45, 5, 10006,1, 0.089933, 0.089933,0.089933, 0.089933, 10, 22),
(165, 45, 6, 10006,1, 0.089933, 0.089933,0.089933, 0.089933, 10, 22);

